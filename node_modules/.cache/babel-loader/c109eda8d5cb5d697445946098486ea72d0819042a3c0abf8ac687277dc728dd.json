{"ast":null,"code":"var _jsxFileName = \"/Users/luca/workspace/HtmlCssJs_Project/plan_web/src/pages/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  // 상태 관리\n  const [markerInfo, setMarkerInfo] = useState(null);\n  const [showInput, setShowInput] = useState(false);\n  const [placeName, setPlaceName] = useState('');\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n\n  // 장소를 localStorage에 저장\n  const saveMarkerToLocalStorage = () => {\n    if (!markerInfo) return;\n\n    // name이 없으면 기본값 설정\n    const name = placeName.trim() || `위치 ${new Date().toLocaleTimeString()}`;\n    const markerObj = {\n      name: name,\n      address: markerInfo.address,\n      lat: markerInfo.lat,\n      lng: markerInfo.lng\n    };\n\n    // localStorage에 기존 데이터 불러오기\n    let markers = JSON.parse(localStorage.getItem(\"markers\")) || [];\n    markers.push(markerObj);\n\n    // localStorage에 저장\n    localStorage.setItem(\"markers\", JSON.stringify(markers));\n\n    // 저장 완료 알림 및 상태 초기화\n    alert('위치가 저장되었습니다! Saved 메뉴에서 확인하세요.');\n    setPlaceName('');\n    setShowInput(false);\n  };\n\n  // 마운트 후 네이버 지도 초기화\n  useEffect(() => {\n    // 지도 로딩 여부 확인\n    if (typeof naver === 'undefined' || !naver.maps) {\n      console.error('네이버 지도 API가 로드되지 않았습니다!');\n      return;\n    }\n    console.log('네이버 지도 API 로드됨');\n    try {\n      // 1. 지도 생성\n      const mapElement = document.getElementById('map');\n      const initPosition = new naver.maps.LatLng(37.5666805, 126.9784147); // 서울시청\n\n      const mapOptions = {\n        center: initPosition,\n        zoom: 14,\n        zoomControl: true,\n        zoomControlOptions: {\n          position: naver.maps.Position.TOP_RIGHT\n        }\n      };\n\n      // 지도 객체 생성\n      const map = new naver.maps.Map(mapElement, mapOptions);\n      mapRef.current = map;\n\n      // 2. 현재 위치 가져오기\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          const currentPosition = new naver.maps.LatLng(latitude, longitude);\n\n          // 현재 위치로 지도 이동\n          map.setCenter(currentPosition);\n\n          // 현재 위치에 마커 표시\n          new naver.maps.Marker({\n            position: currentPosition,\n            map: map,\n            icon: {\n              content: '<div style=\"width: 16px; height: 16px; background-color: blue; border-radius: 50%; border: 2px solid white;\"></div>',\n              anchor: new naver.maps.Point(8, 8)\n            }\n          });\n        }, error => {\n          console.warn('현재 위치를 가져올 수 없습니다:', error);\n        });\n      }\n\n      // 3. 지도 클릭 이벤트 리스너\n      naver.maps.Event.addListener(map, 'click', function (e) {\n        const clickedPosition = e.coord;\n\n        // 기존 마커 제거\n        if (markerRef.current) {\n          markerRef.current.setMap(null);\n        }\n\n        // 새 마커 생성\n        const marker = new naver.maps.Marker({\n          position: clickedPosition,\n          map: map\n        });\n        markerRef.current = marker;\n\n        // 클릭 위치의 주소 정보 가져오기 (Reverse Geocoding)\n        naver.maps.Service.reverseGeocode({\n          coords: clickedPosition,\n          orders: [naver.maps.Service.OrderType.ADDR, naver.maps.Service.OrderType.ROAD_ADDR].join(',')\n        }, function (status, response) {\n          if (status !== naver.maps.Service.Status.OK) {\n            console.error('주소 정보를 가져오는데 실패했습니다');\n            return;\n          }\n\n          // 주소 정보 추출\n          const result = response.v2;\n          const address = result.address.roadAddress || result.address.jibunAddress;\n\n          // 정보창 표시\n          const infoWindow = new naver.maps.InfoWindow({\n            content: `\n              <div style=\"padding: 10px; min-width: 200px;\">\n                <p>위도: ${clickedPosition.lat().toFixed(6)}</p>\n                <p>경도: ${clickedPosition.lng().toFixed(6)}</p>\n                <p>주소: ${address}</p>\n              </div>\n            `,\n            borderColor: '#ccc',\n            borderWidth: 1,\n            anchorSize: new naver.maps.Size(10, 10)\n          });\n          infoWindow.open(map, marker);\n\n          // 마커 정보 업데이트\n          const markerData = {\n            lat: clickedPosition.lat(),\n            lng: clickedPosition.lng(),\n            address: address\n          };\n          setMarkerInfo(markerData);\n          setShowInput(true);\n        });\n      });\n      console.log('지도 초기화 완료!');\n    } catch (error) {\n      console.error('지도 초기화 중 오류 발생:', error);\n    }\n    return () => {\n      // 컴포넌트 언마운트 시 정리 작업\n      if (markerRef.current) {\n        markerRef.current.setMap(null);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        style: {\n          width: '100%',\n          height: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), showInput && markerInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marker-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC120\\uD0DD\\uD55C \\uC704\\uCE58 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC8FC\\uC18C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 14\n        }, this), \" \", markerInfo.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC704\\uB3C4:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 14\n        }, this), \" \", markerInfo.lat.toFixed(6), \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uACBD\\uB3C4:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 64\n        }, this), \" \", markerInfo.lng.toFixed(6)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"placeName\",\n          children: \"\\uC7A5\\uC18C \\uC774\\uB984:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"placeName\",\n          value: placeName,\n          onChange: e => setPlaceName(e.target.value),\n          placeholder: \"\\uC7A5\\uC18C \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveMarkerToLocalStorage,\n        className: \"save-button\",\n        children: \"\\uC774 \\uC704\\uCE58 \\uC800\\uC7A5\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"guide-text\",\n        children: \"\\uC704\\uCE58\\uB97C \\uC800\\uC7A5\\uD558\\uB824\\uBA74 \\uC9C0\\uB3C4\\uC5D0\\uC11C \\uC6D0\\uD558\\uB294 \\uC704\\uCE58\\uB97C \\uD074\\uB9AD\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"guide-text\",\n        children: [\"\\uC800\\uC7A5\\uD55C \\uC704\\uCE58\\uB294 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 43\n        }, this), \" \\uBA54\\uB274\\uC5D0\\uC11C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"V6YfjDU+aaYxA0zl3QVBW8CC+rU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Map","_s","markerInfo","setMarkerInfo","showInput","setShowInput","placeName","setPlaceName","mapRef","markerRef","saveMarkerToLocalStorage","name","trim","Date","toLocaleTimeString","markerObj","address","lat","lng","markers","JSON","parse","localStorage","getItem","push","setItem","stringify","alert","naver","maps","console","error","log","mapElement","document","getElementById","initPosition","LatLng","mapOptions","center","zoom","zoomControl","zoomControlOptions","position","Position","TOP_RIGHT","map","current","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","currentPosition","setCenter","Marker","icon","content","anchor","Point","warn","Event","addListener","e","clickedPosition","coord","setMap","marker","Service","reverseGeocode","orders","OrderType","ADDR","ROAD_ADDR","join","status","response","Status","OK","result","v2","roadAddress","jibunAddress","infoWindow","InfoWindow","toFixed","borderColor","borderWidth","anchorSize","Size","open","markerData","className","children","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/luca/workspace/HtmlCssJs_Project/plan_web/src/pages/Map.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './Map.css';\n\nfunction Map() {\n  // 상태 관리\n  const [markerInfo, setMarkerInfo] = useState(null);\n  const [showInput, setShowInput] = useState(false);\n  const [placeName, setPlaceName] = useState('');\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n\n  // 장소를 localStorage에 저장\n  const saveMarkerToLocalStorage = () => {\n    if (!markerInfo) return;\n    \n    // name이 없으면 기본값 설정\n    const name = placeName.trim() || `위치 ${new Date().toLocaleTimeString()}`;\n    \n    const markerObj = {\n      name: name,\n      address: markerInfo.address,\n      lat: markerInfo.lat,\n      lng: markerInfo.lng\n    };\n\n    // localStorage에 기존 데이터 불러오기\n    let markers = JSON.parse(localStorage.getItem(\"markers\")) || [];\n    markers.push(markerObj);\n\n    // localStorage에 저장\n    localStorage.setItem(\"markers\", JSON.stringify(markers));\n\n    // 저장 완료 알림 및 상태 초기화\n    alert('위치가 저장되었습니다! Saved 메뉴에서 확인하세요.');\n    setPlaceName('');\n    setShowInput(false);\n  };\n\n  // 마운트 후 네이버 지도 초기화\n  useEffect(() => {\n    // 지도 로딩 여부 확인\n    if (typeof naver === 'undefined' || !naver.maps) {\n      console.error('네이버 지도 API가 로드되지 않았습니다!');\n      return;\n    }\n\n    console.log('네이버 지도 API 로드됨');\n\n    try {\n      // 1. 지도 생성\n      const mapElement = document.getElementById('map');\n      const initPosition = new naver.maps.LatLng(37.5666805, 126.9784147); // 서울시청\n      \n      const mapOptions = {\n        center: initPosition,\n        zoom: 14,\n        zoomControl: true,\n        zoomControlOptions: {\n          position: naver.maps.Position.TOP_RIGHT\n        }\n      };\n      \n      // 지도 객체 생성\n      const map = new naver.maps.Map(mapElement, mapOptions);\n      mapRef.current = map;\n      \n      // 2. 현재 위치 가져오기\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const { latitude, longitude } = position.coords;\n          const currentPosition = new naver.maps.LatLng(latitude, longitude);\n          \n          // 현재 위치로 지도 이동\n          map.setCenter(currentPosition);\n          \n          // 현재 위치에 마커 표시\n          new naver.maps.Marker({\n            position: currentPosition,\n            map: map,\n            icon: {\n              content: '<div style=\"width: 16px; height: 16px; background-color: blue; border-radius: 50%; border: 2px solid white;\"></div>',\n              anchor: new naver.maps.Point(8, 8)\n            }\n          });\n        }, error => {\n          console.warn('현재 위치를 가져올 수 없습니다:', error);\n        });\n      }\n      \n      // 3. 지도 클릭 이벤트 리스너\n      naver.maps.Event.addListener(map, 'click', function(e) {\n        const clickedPosition = e.coord;\n        \n        // 기존 마커 제거\n        if (markerRef.current) {\n          markerRef.current.setMap(null);\n        }\n        \n        // 새 마커 생성\n        const marker = new naver.maps.Marker({\n          position: clickedPosition,\n          map: map\n        });\n        \n        markerRef.current = marker;\n        \n        // 클릭 위치의 주소 정보 가져오기 (Reverse Geocoding)\n        naver.maps.Service.reverseGeocode({\n          coords: clickedPosition,\n          orders: [naver.maps.Service.OrderType.ADDR, naver.maps.Service.OrderType.ROAD_ADDR].join(',')\n        }, function(status, response) {\n          if (status !== naver.maps.Service.Status.OK) {\n            console.error('주소 정보를 가져오는데 실패했습니다');\n            return;\n          }\n          \n          // 주소 정보 추출\n          const result = response.v2;\n          const address = result.address.roadAddress || result.address.jibunAddress;\n          \n          // 정보창 표시\n          const infoWindow = new naver.maps.InfoWindow({\n            content: `\n              <div style=\"padding: 10px; min-width: 200px;\">\n                <p>위도: ${clickedPosition.lat().toFixed(6)}</p>\n                <p>경도: ${clickedPosition.lng().toFixed(6)}</p>\n                <p>주소: ${address}</p>\n              </div>\n            `,\n            borderColor: '#ccc',\n            borderWidth: 1,\n            anchorSize: new naver.maps.Size(10, 10)\n          });\n          \n          infoWindow.open(map, marker);\n          \n          // 마커 정보 업데이트\n          const markerData = {\n            lat: clickedPosition.lat(),\n            lng: clickedPosition.lng(),\n            address: address\n          };\n          \n          setMarkerInfo(markerData);\n          setShowInput(true);\n        });\n      });\n      \n      console.log('지도 초기화 완료!');\n    } catch (error) {\n      console.error('지도 초기화 중 오류 발생:', error);\n    }\n    \n    return () => {\n      // 컴포넌트 언마운트 시 정리 작업\n      if (markerRef.current) {\n        markerRef.current.setMap(null);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"map-page\">\n      <div className=\"map-container\">\n        <div id=\"map\" style={{ width: '100%', height: '400px' }}></div>\n      </div>\n      \n      {showInput && markerInfo && (\n        <div className=\"marker-info\">\n          <h3>선택한 위치 정보</h3>\n          <p><strong>주소:</strong> {markerInfo.address}</p>\n          <p><strong>위도:</strong> {markerInfo.lat.toFixed(6)}, <strong>경도:</strong> {markerInfo.lng.toFixed(6)}</p>\n          <div className=\"input-group\">\n            <label htmlFor=\"placeName\">장소 이름:</label>\n            <input \n              type=\"text\" \n              id=\"placeName\" \n              value={placeName} \n              onChange={(e) => setPlaceName(e.target.value)} \n              placeholder=\"장소 이름을 입력하세요\"\n            />\n          </div>\n          <button onClick={saveMarkerToLocalStorage} className=\"save-button\">이 위치 저장하기</button>\n        </div>\n      )}\n      \n      <div className=\"map-guide\">\n        <p className=\"guide-text\">위치를 저장하려면 지도에서 원하는 위치를 클릭하세요.</p>\n        <p className=\"guide-text\">저장한 위치는 <strong>Saved</strong> 메뉴에서 확인할 수 있습니다.</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}