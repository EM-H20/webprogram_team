{"ast":null,"code":"var _jsxFileName = \"/Users/luca/workspace/HtmlCssJs_Project/plan_web/src/pages/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  // 상태 관리\n  const [markerInfo, setMarkerInfo] = useState(null);\n  const [showInput, setShowInput] = useState(false);\n  const [placeName, setPlaceName] = useState('');\n\n  // 장소를 localStorage에 저장\n  const saveMarkerToLocalStorage = () => {\n    if (!markerInfo) return;\n\n    // name이 없으면 기본값 설정\n    const name = placeName.trim() || `위치 ${new Date().toLocaleTimeString()}`;\n    const markerObj = {\n      name: name,\n      address: markerInfo.address,\n      lat: markerInfo.lat,\n      lng: markerInfo.lng\n    };\n\n    // localStorage에 기존 데이터 불러오기\n    let markers = JSON.parse(localStorage.getItem(\"markers\")) || [];\n    markers.push(markerObj);\n\n    // localStorage에 저장\n    localStorage.setItem(\"markers\", JSON.stringify(markers));\n\n    // 저장 완료 알림 및 상태 초기화\n    alert('위치가 저장되었습니다! Saved 메뉴에서 확인하세요.');\n    setPlaceName('');\n    setShowInput(false);\n  };\n\n  // 마운트 후 네이버 지도 초기화\n  useEffect(() => {\n    // 지도 초기화 함수\n    const initializeMap = () => {\n      try {\n        // 예시 HTML과 동일한 방식으로 지도 초기화\n        const mapElement = document.getElementById('map');\n        if (!mapElement) {\n          console.error('map 요소를 찾을 수 없습니다');\n          return;\n        }\n        if (!window.naver || !window.naver.maps) {\n          console.error('Naver Maps API가 로드되지 않았습니다');\n          return;\n        }\n\n        // 기본 위치 (서울 - 예시 HTML과 동일한 위치 사용)\n        const latlng = new window.naver.maps.LatLng(37.549186395087, 127.07505567644);\n\n        // 지도 옵션\n        const mapOptions = {\n          center: new window.naver.maps.LatLng(latlng.lat(), latlng.lng()),\n          zoomControl: true,\n          zoom: 16\n        };\n\n        // 지도 생성 및 전역 변수에 저장\n        const map = new window.naver.maps.Map(mapElement, mapOptions);\n\n        // 현재 위치 가져오기\n        navigator.geolocation.getCurrentPosition(position => {\n          // 현재 위치 가져오기 성공\n          const currentPosition = new window.naver.maps.LatLng(position.coords.latitude, position.coords.longitude);\n          console.log('현재 위치 : ' + currentPosition.lat() + ', ' + currentPosition.lng());\n          map.setCenter(currentPosition); // 현재 위치로 지도 중앙 이동\n\n          // 현재 위치에 마커 추가\n          new window.naver.maps.Marker({\n            map: map,\n            position: currentPosition,\n            icon: {\n              content: '<div class=\"map-current-location\"></div>',\n              anchor: new window.naver.maps.Point(15, 15)\n            }\n          });\n        }, error => {\n          // 현재 위치 가져오기 실패\n          console.error('현재 위치를 가져올 수 없습니다', error);\n        });\n\n        // 전역 변수로 마커 관리\n        let currentMarker = null;\n\n        // 지도 클릭 이벤트 추가\n        window.naver.maps.Event.addListener(map, 'click', function (e) {\n          // 클릭한 위치 좌표\n          const latlng = e.coord;\n\n          // 기존 마커 제거\n          if (currentMarker) {\n            currentMarker.setMap(null);\n          }\n\n          // 새 마커 생성\n          currentMarker = new window.naver.maps.Marker({\n            position: latlng,\n            map: map\n          });\n\n          // 위치 정보를 주소로 변환 (Reverse Geocoding)\n          window.naver.maps.Service.reverseGeocode({\n            coords: latlng,\n            orders: [window.naver.maps.Service.OrderType.ADDR, window.naver.maps.Service.OrderType.ROAD_ADDR].join(',')\n          }, function (status, response) {\n            console.log(response); // 주소 응답 확인\n\n            if (status !== window.naver.maps.Service.Status.OK) {\n              alert('주소 정보를 가져올 수 없습니다.');\n              return;\n            }\n\n            // 도로명 주소 또는 지번 주소 가져오기\n            const address = response.v2.address.roadAddress ? response.v2.address.roadAddress : response.v2.address.jibunAddress;\n\n            // 정보창 표시\n            const infoWindow = new window.naver.maps.InfoWindow({\n              content: `<div class=\"marker\">\n                          위도: ${latlng.lat().toFixed(6)}<br>\n                          경도: ${latlng.lng().toFixed(6)}<br>\n                          ${address}\n                         </div>`,\n              maxWidth: 300,\n              backgroundColor: '#fff',\n              borderColor: '#ccc',\n              borderWidth: 2,\n              anchorSize: new window.naver.maps.Size(10, 10),\n              anchorColor: '#fff',\n              pixelOffset: new window.naver.maps.Point(10, -10)\n            });\n            infoWindow.open(map, currentMarker);\n\n            // 마커 정보 처리 및 저장 버튼 표시\n            const markerObj = {\n              lat: latlng.lat(),\n              lng: latlng.lng(),\n              address: address\n            };\n            setMarkerInfo(markerObj);\n            setShowInput(true);\n          });\n        });\n      } catch (error) {\n        console.error('지도 초기화 중 오류 발생:', error);\n      }\n    };\n\n    // 컴포넌트가 마운트된 후 지도 초기화\n    setTimeout(initializeMap, 100);\n    return () => {\n      // 컴포넌트 언마운트 시 정리 작업\n    };\n  }, []); // 인자가 없으면 컴포넌트가 마운트될 때만 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), showInput && markerInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marker-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC120\\uD0DD\\uD55C \\uC704\\uCE58 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC8FC\\uC18C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 14\n        }, this), \" \", markerInfo.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC704\\uB3C4:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 14\n        }, this), \" \", markerInfo.lat.toFixed(6), \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uACBD\\uB3C4:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 64\n        }, this), \" \", markerInfo.lng.toFixed(6)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"placeName\",\n          children: \"\\uC7A5\\uC18C \\uC774\\uB984:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"placeName\",\n          value: placeName,\n          onChange: e => setPlaceName(e.target.value),\n          placeholder: \"\\uC7A5\\uC18C \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveMarkerToLocalStorage,\n        className: \"save-button\",\n        children: \"\\uC774 \\uC704\\uCE58 \\uC800\\uC7A5\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"guide-text\",\n        children: \"\\uC704\\uCE58\\uB97C \\uC800\\uC7A5\\uD558\\uB824\\uBA74 \\uC9C0\\uB3C4\\uC5D0\\uC11C \\uC6D0\\uD558\\uB294 \\uC704\\uCE58\\uB97C \\uD074\\uB9AD\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"guide-text\",\n        children: [\"\\uC800\\uC7A5\\uD55C \\uC704\\uCE58\\uB294 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 43\n        }, this), \" \\uBA54\\uB274\\uC5D0\\uC11C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"qVJIA6DF0KA4TkSk/OBGqFE5+NY=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Map","_s","markerInfo","setMarkerInfo","showInput","setShowInput","placeName","setPlaceName","saveMarkerToLocalStorage","name","trim","Date","toLocaleTimeString","markerObj","address","lat","lng","markers","JSON","parse","localStorage","getItem","push","setItem","stringify","alert","initializeMap","mapElement","document","getElementById","console","error","window","naver","maps","latlng","LatLng","mapOptions","center","zoomControl","zoom","map","navigator","geolocation","getCurrentPosition","position","currentPosition","coords","latitude","longitude","log","setCenter","Marker","icon","content","anchor","Point","currentMarker","Event","addListener","e","coord","setMap","Service","reverseGeocode","orders","OrderType","ADDR","ROAD_ADDR","join","status","response","Status","OK","v2","roadAddress","jibunAddress","infoWindow","InfoWindow","toFixed","maxWidth","backgroundColor","borderColor","borderWidth","anchorSize","Size","anchorColor","pixelOffset","open","setTimeout","className","children","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/luca/workspace/HtmlCssJs_Project/plan_web/src/pages/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Map.css';\n\nfunction Map() {\n  // 상태 관리\n  const [markerInfo, setMarkerInfo] = useState(null);\n  const [showInput, setShowInput] = useState(false);\n  const [placeName, setPlaceName] = useState('');\n\n\n\n  // 장소를 localStorage에 저장\n  const saveMarkerToLocalStorage = () => {\n    if (!markerInfo) return;\n    \n    // name이 없으면 기본값 설정\n    const name = placeName.trim() || `위치 ${new Date().toLocaleTimeString()}`;\n    \n    const markerObj = {\n      name: name,\n      address: markerInfo.address,\n      lat: markerInfo.lat,\n      lng: markerInfo.lng\n    };\n\n    // localStorage에 기존 데이터 불러오기\n    let markers = JSON.parse(localStorage.getItem(\"markers\")) || [];\n    markers.push(markerObj);\n\n    // localStorage에 저장\n    localStorage.setItem(\"markers\", JSON.stringify(markers));\n\n    // 저장 완료 알림 및 상태 초기화\n    alert('위치가 저장되었습니다! Saved 메뉴에서 확인하세요.');\n    setPlaceName('');\n    setShowInput(false);\n  };\n\n  // 마운트 후 네이버 지도 초기화\n  useEffect(() => {\n    // 지도 초기화 함수\n    const initializeMap = () => {\n      try {\n        // 예시 HTML과 동일한 방식으로 지도 초기화\n        const mapElement = document.getElementById('map');\n        \n        if (!mapElement) {\n          console.error('map 요소를 찾을 수 없습니다');\n          return;\n        }\n        \n        if (!window.naver || !window.naver.maps) {\n          console.error('Naver Maps API가 로드되지 않았습니다');\n          return;\n        }\n        \n        // 기본 위치 (서울 - 예시 HTML과 동일한 위치 사용)\n        const latlng = new window.naver.maps.LatLng(37.549186395087, 127.07505567644);\n        \n        // 지도 옵션\n        const mapOptions = {\n          center: new window.naver.maps.LatLng(latlng.lat(), latlng.lng()),\n          zoomControl: true,\n          zoom: 16\n        };\n        \n        // 지도 생성 및 전역 변수에 저장\n        const map = new window.naver.maps.Map(mapElement, mapOptions);\n        \n        // 현재 위치 가져오기\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            // 현재 위치 가져오기 성공\n            const currentPosition = new window.naver.maps.LatLng(\n              position.coords.latitude, \n              position.coords.longitude\n            );\n            \n            console.log('현재 위치 : ' + currentPosition.lat() + ', ' + currentPosition.lng());\n            map.setCenter(currentPosition); // 현재 위치로 지도 중앙 이동\n            \n            // 현재 위치에 마커 추가\n            new window.naver.maps.Marker({\n              map: map,\n              position: currentPosition,\n              icon: {\n                content: '<div class=\"map-current-location\"></div>',\n                anchor: new window.naver.maps.Point(15, 15)\n              }\n            });\n          }, \n          (error) => {\n            // 현재 위치 가져오기 실패\n            console.error('현재 위치를 가져올 수 없습니다', error);\n          }\n        );\n        \n        // 전역 변수로 마커 관리\n        let currentMarker = null;\n        \n        // 지도 클릭 이벤트 추가\n        window.naver.maps.Event.addListener(map, 'click', function(e) {\n          // 클릭한 위치 좌표\n          const latlng = e.coord;\n          \n          // 기존 마커 제거\n          if (currentMarker) {\n            currentMarker.setMap(null);\n          }\n          \n          // 새 마커 생성\n          currentMarker = new window.naver.maps.Marker({\n            position: latlng,\n            map: map\n          });\n          \n          // 위치 정보를 주소로 변환 (Reverse Geocoding)\n          window.naver.maps.Service.reverseGeocode(\n            {\n              coords: latlng,\n              orders: [\n                window.naver.maps.Service.OrderType.ADDR,\n                window.naver.maps.Service.OrderType.ROAD_ADDR\n              ].join(',')\n            },\n            function(status, response) {\n              console.log(response); // 주소 응답 확인\n              \n              if (status !== window.naver.maps.Service.Status.OK) {\n                alert('주소 정보를 가져올 수 없습니다.');\n                return;\n              }\n              \n              // 도로명 주소 또는 지번 주소 가져오기\n              const address = response.v2.address.roadAddress\n                ? response.v2.address.roadAddress\n                : response.v2.address.jibunAddress;\n              \n              // 정보창 표시\n              const infoWindow = new window.naver.maps.InfoWindow({\n                content: `<div class=\"marker\">\n                          위도: ${latlng.lat().toFixed(6)}<br>\n                          경도: ${latlng.lng().toFixed(6)}<br>\n                          ${address}\n                         </div>`,\n                maxWidth: 300,\n                backgroundColor: '#fff',\n                borderColor: '#ccc',\n                borderWidth: 2,\n                anchorSize: new window.naver.maps.Size(10, 10),\n                anchorColor: '#fff',\n                pixelOffset: new window.naver.maps.Point(10, -10)\n              });\n              \n              infoWindow.open(map, currentMarker);\n              \n              // 마커 정보 처리 및 저장 버튼 표시\n              const markerObj = {\n                lat: latlng.lat(),\n                lng: latlng.lng(),\n                address: address\n              };\n              \n              setMarkerInfo(markerObj);\n              setShowInput(true);\n            }\n          );\n        });\n      } catch (error) {\n        console.error('지도 초기화 중 오류 발생:', error);\n      }\n    };\n    \n    // 컴포넌트가 마운트된 후 지도 초기화\n    setTimeout(initializeMap, 100);\n    \n    return () => {\n      // 컴포넌트 언마운트 시 정리 작업\n    };\n  }, []);  // 인자가 없으면 컴포넌트가 마운트될 때만 실행\n\n  return (\n    <div className=\"map-page\">\n      <div className=\"map-container\">\n        <div id=\"map\" style={{ width: '100%', height: '100%' }}></div>\n      </div>\n      \n      {showInput && markerInfo && (\n        <div className=\"marker-info\">\n          <h3>선택한 위치 정보</h3>\n          <p><strong>주소:</strong> {markerInfo.address}</p>\n          <p><strong>위도:</strong> {markerInfo.lat.toFixed(6)}, <strong>경도:</strong> {markerInfo.lng.toFixed(6)}</p>\n          <div className=\"input-group\">\n            <label htmlFor=\"placeName\">장소 이름:</label>\n            <input \n              type=\"text\" \n              id=\"placeName\" \n              value={placeName} \n              onChange={(e) => setPlaceName(e.target.value)} \n              placeholder=\"장소 이름을 입력하세요\"\n            />\n          </div>\n          <button onClick={saveMarkerToLocalStorage} className=\"save-button\">이 위치 저장하기</button>\n        </div>\n      )}\n      \n      <div className=\"map-guide\">\n        <p className=\"guide-text\">위치를 저장하려면 지도에서 원하는 위치를 클릭하세요.</p>\n        <p className=\"guide-text\">저장한 위치는 <strong>Saved</strong> 메뉴에서 확인할 수 있습니다.</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}