{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\username\\\\Desktop\\\\newweb\\\\src\\\\pages\\\\Plan.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Plan.css';\n\n// TODO: 아래 이미지는 실제 경로에 맞게 교체해주세요.\nimport img1 from '../assets/1.PNG';\nimport img2 from '../assets/2.PNG';\nimport img3 from '../assets/3.PNG';\nimport img4 from '../assets/4.PNG';\nimport img5 from '../assets/5.PNG';\nimport img6 from '../assets/6.PNG';\nimport img7 from '../assets/7.PNG';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabList = ['Plan', 'Place'];\n\n// TODO: 아이콘 파일(하트, 위치 아이콘, 필터 아이콘 등)도 실제 프로젝트 내 경로에 맞춰 교체하거나\n//       react-icons/FontAwesome 등으로 대체하셔도 됩니다.\n\nexport default function Plan() {\n  _s();\n  // 현재 선택된 탭 상태 (Plan / Favorite / Saved)\n  const [activeTab, setActiveTab] = useState('Plan');\n  const [search, setSearch] = useState('');\n  const [savedLocations, setSavedLocations] = useState([]);\n  const [savedPlans, setSavedPlans] = useState([]);\n\n  // 카드 데이터 (실제 API에서 받아온 값으로 교체 가능)\n  const plans = [{\n    id: 1,\n    title: '세종대학교',\n    description: '설명 들어갈 칸',\n    address: '서울 광진구 군자로 114',\n    image: img1\n  }, {\n    id: 2,\n    title: '어린이대공원',\n    description: '설명 들어갈 칸',\n    address: '서울특별시 광진구 능동로 216',\n    image: img2\n  }, {\n    id: 3,\n    title: '다른 무언가',\n    description: `설명 들어갈 칸`,\n    address: '주소',\n    image: img3\n  }, {\n    id: 4,\n    title: '어린이대공원',\n    description: '설명 들어갈 칸',\n    address: '서울특별시 광진구 능동로 216',\n    image: img2\n  }, {\n    id: 5,\n    title: '다른 무언가',\n    description: `설명 들어갈 칸`,\n    address: '주소',\n    image: img3\n  }];\n  const handleAddPlan = () => {\n    const newPlan = {\n      id: Date.now(),\n      title: '새 플랜',\n      description: '새로 추가된 플랜입니다.',\n      address: '상세 주소를 입력하세요',\n      image: img1 // 기본 이미지\n    };\n    setSavedPlans(prev => [...prev, newPlan]);\n  };\n\n  // localStorage에서 저장된 위치 정보를 로드하는 함수\n  useEffect(() => {\n    const loadSavedLocations = () => {\n      try {\n        const markers = JSON.parse(localStorage.getItem('markers')) || [];\n        // 데이터 형식 확인 및 보완\n        const processedMarkers = markers.map(marker => ({\n          ...marker,\n          // 기본 이미지 없는 경우 처리 (내장된 이미지 사용)\n          img: marker.img || (marker.id % 6 === 0 ? img6 : marker.id % 5 === 0 ? img5 : marker.id % 4 === 0 ? img4 : marker.id % 3 === 0 ? img3 : marker.id % 2 === 0 ? img2 : img1),\n          // id가 없는 경우 새로 생성\n          id: marker.id || new Date().getTime() + Math.floor(Math.random() * 1000),\n          // titleKor이 없으면 name으로 설정\n          titleKor: marker.titleKor || marker.name,\n          // titleEng가 없으면 name으로 설정\n          titleEng: marker.titleEng || marker.name,\n          // location이 없는 경우 주소에서 추출 시도\n          location: marker.location || extractLocation(marker.address) || 'Unknown',\n          // 기본 유형 설정\n          type: marker.type || 'Landmark',\n          // 기본 체류시간 설정\n          stay: marker.stay || '1h',\n          // 기본적으로 인기 아님\n          popular: marker.popular || false,\n          // 기본적으로 favorite 아님\n          favorite: marker.favorite || false\n        }));\n        setSavedLocations(processedMarkers);\n      } catch (error) {\n        console.error('저장된 위치 정보를 불러오는 중 오류가 발생했습니다:', error);\n        setSavedLocations([]);\n      }\n    };\n    loadSavedLocations();\n  }, []);\n\n  // 주소에서 지역명 추출 함수\n  const extractLocation = address => {\n    if (!address) return '';\n\n    // 시/도 추출 (서울특별시, 경기도 등)\n    const cityMatch = address.match(/([^\\s]+시|[^\\s]+도|[^\\s]+군)/);\n    if (cityMatch) {\n      // \"특별시\", \"광역시\" 등의 접미사 제거\n      return cityMatch[0].replace(/특별시|광역시|자치시/, '').trim();\n    }\n    return '';\n  };\n  const allData = [\n  //...plan_cardData,\n  ...savedLocations];\n  const lowerSearch = search.trim().toLowerCase();\n  const filtered = allData.filter(item => {\n    var _item$titleEng, _item$titleKor, _item$name;\n    const matchSearch = ((_item$titleEng = item.titleEng) === null || _item$titleEng === void 0 ? void 0 : _item$titleEng.toLowerCase().includes(lowerSearch)) || ((_item$titleKor = item.titleKor) === null || _item$titleKor === void 0 ? void 0 : _item$titleKor.toLowerCase().includes(lowerSearch)) || ((_item$name = item.name) === null || _item$name === void 0 ? void 0 : _item$name.toLowerCase().includes(lowerSearch));\n    return lowerSearch === '' || matchSearch;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plan-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"plan-page__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"plan-page__title\",\n        children: \"\\u201CPlan your journey, live the adventure\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"plan-page__subtitle\",\n        children: \"\\u201CHit the road. Make new memories.\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-page__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-page__tabs\",\n        children: tabList.map(tabName => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === tabName ? 'tab--active' : ''}`,\n          onClick: () => setActiveTab(tabName),\n          children: tabName\n        }, tabName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search...\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-page__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-page__list\",\n        children: [activeTab === 'Plan' && savedPlans.map(loc => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan_card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: loc.image,\n            alt: loc.title,\n            className: \"plan_card__image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan_card__body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__title\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: loc.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"plan_card__desc\",\n              children: loc.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), loc.address && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__address\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: loc.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"plan_card__delete\",\n            title: \"\\uC0AD\\uC81C\\uD558\\uAE30\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, loc.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)), activeTab === 'Plan' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plan-page__add-button\",\n          onClick: handleAddPlan,\n          children: \"+ \\uD50C\\uB79C \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), activeTab === 'Place' && filtered.map(place => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan_card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: place.img,\n            alt: place.name,\n            className: \"plan_card__image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan_card__body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__title\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: place.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"plan_card__desc\",\n              children: place.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), place.address && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__address\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: place.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `plan_card__favorite${place.favorite ? ' --active' : ''}`,\n            children: place.favorite ? '♥' : '♡'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, place.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-page__map\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-placeholder\",\n          children: \"\\uC9C0\\uB3C4 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uAC00 \\uC5EC\\uAE30\\uC5D0 \\uB4E4\\uC5B4\\uAC11\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(Plan, \"5j1RfzISjHllkpkjVdcZgx9sMY8=\");\n_c = Plan;\nvar _c;\n$RefreshReg$(_c, \"Plan\");","map":{"version":3,"names":["React","useState","useEffect","img1","img2","img3","img4","img5","img6","img7","jsxDEV","_jsxDEV","tabList","Plan","_s","activeTab","setActiveTab","search","setSearch","savedLocations","setSavedLocations","savedPlans","setSavedPlans","plans","id","title","description","address","image","handleAddPlan","newPlan","Date","now","prev","loadSavedLocations","markers","JSON","parse","localStorage","getItem","processedMarkers","map","marker","img","getTime","Math","floor","random","titleKor","name","titleEng","location","extractLocation","type","stay","popular","favorite","error","console","cityMatch","match","replace","trim","allData","lowerSearch","toLowerCase","filtered","filter","item","_item$titleEng","_item$titleKor","_item$name","matchSearch","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tabName","onClick","placeholder","value","onChange","e","target","loc","src","alt","place","_c","$RefreshReg$"],"sources":["C:/Users/username/Desktop/newweb/src/pages/Plan.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Plan.css';\n\n// TODO: 아래 이미지는 실제 경로에 맞게 교체해주세요.\nimport img1 from '../assets/1.PNG';\nimport img2 from '../assets/2.PNG';\nimport img3 from '../assets/3.PNG';\nimport img4 from '../assets/4.PNG';\nimport img5 from '../assets/5.PNG';\nimport img6 from '../assets/6.PNG';\nimport img7 from '../assets/7.PNG';\n\nconst tabList = ['Plan', 'Place'];\n\n// TODO: 아이콘 파일(하트, 위치 아이콘, 필터 아이콘 등)도 실제 프로젝트 내 경로에 맞춰 교체하거나\n//       react-icons/FontAwesome 등으로 대체하셔도 됩니다.\n\n\nexport default function Plan() {\n  // 현재 선택된 탭 상태 (Plan / Favorite / Saved)\n  const [activeTab, setActiveTab] = useState('Plan');\n  const [search, setSearch] = useState('');\n  const [savedLocations, setSavedLocations] = useState([]);\n  const [savedPlans, setSavedPlans] = useState([]);\n\n  // 카드 데이터 (실제 API에서 받아온 값으로 교체 가능)\n  const plans = [\n    {\n      id: 1,\n      title: '세종대학교',\n      description: '설명 들어갈 칸',\n      address: '서울 광진구 군자로 114',\n      image: img1,\n    },\n    {\n      id: 2,\n      title: '어린이대공원',\n      description: '설명 들어갈 칸',\n      address: '서울특별시 광진구 능동로 216',\n      image: img2,\n    },\n    {\n      id: 3,\n      title: '다른 무언가',\n      description: `설명 들어갈 칸`,\n      address: '주소',\n      image: img3,\n    },\n    {\n      id: 4,\n      title: '어린이대공원',\n      description: '설명 들어갈 칸',\n      address: '서울특별시 광진구 능동로 216',\n      image: img2,\n    },\n    {\n      id: 5,\n      title: '다른 무언가',\n      description: `설명 들어갈 칸`,\n      address: '주소',\n      image: img3,\n    },\n  ];\n\n  const handleAddPlan = () => {\n    const newPlan = {\n      id: Date.now(),\n      title: '새 플랜',\n      description: '새로 추가된 플랜입니다.',\n      address: '상세 주소를 입력하세요',\n      image: img1, // 기본 이미지\n    };\n    setSavedPlans(prev => [...prev, newPlan]);\n  };\n\n  // localStorage에서 저장된 위치 정보를 로드하는 함수\n  useEffect(() => {\n    const loadSavedLocations = () => {\n      try {\n        const markers = JSON.parse(localStorage.getItem('markers')) || [];\n        // 데이터 형식 확인 및 보완\n        const processedMarkers = markers.map(marker => ({\n          ...marker,\n          // 기본 이미지 없는 경우 처리 (내장된 이미지 사용)\n          img: marker.img || (marker.id % 6 === 0 ? img6 : \n                marker.id % 5 === 0 ? img5 :\n                marker.id % 4 === 0 ? img4 :\n                marker.id % 3 === 0 ? img3 :\n                marker.id % 2 === 0 ? img2 : img1),\n          // id가 없는 경우 새로 생성\n          id: marker.id || new Date().getTime() + Math.floor(Math.random() * 1000),\n          // titleKor이 없으면 name으로 설정\n          titleKor: marker.titleKor || marker.name,\n          // titleEng가 없으면 name으로 설정\n          titleEng: marker.titleEng || marker.name,\n          // location이 없는 경우 주소에서 추출 시도\n          location: marker.location || extractLocation(marker.address) || 'Unknown',\n          // 기본 유형 설정\n          type: marker.type || 'Landmark',\n          // 기본 체류시간 설정\n          stay: marker.stay || '1h',\n          // 기본적으로 인기 아님\n          popular: marker.popular || false,\n          // 기본적으로 favorite 아님\n          favorite: marker.favorite || false\n        }));\n        setSavedLocations(processedMarkers);\n      } catch (error) {\n        console.error('저장된 위치 정보를 불러오는 중 오류가 발생했습니다:', error);\n        setSavedLocations([]);\n      }\n    };\n    \n    loadSavedLocations();\n  }, []);\n\n  // 주소에서 지역명 추출 함수\n  const extractLocation = (address) => {\n    if (!address) return '';\n    \n    // 시/도 추출 (서울특별시, 경기도 등)\n    const cityMatch = address.match(/([^\\s]+시|[^\\s]+도|[^\\s]+군)/);\n    if (cityMatch) {\n      // \"특별시\", \"광역시\" 등의 접미사 제거\n      return cityMatch[0].replace(/특별시|광역시|자치시/, '').trim();\n    }\n    return '';\n  };\n\n  const allData = [\n    //...plan_cardData,\n    ...savedLocations\n  ];\n  const lowerSearch = search.trim().toLowerCase();\n  const filtered = allData.filter(item => {\n    const matchSearch =\n      item.titleEng?.toLowerCase().includes(lowerSearch) ||\n      item.titleKor?.toLowerCase().includes(lowerSearch) ||\n      item.name?.toLowerCase().includes(lowerSearch);\n    return lowerSearch === '' || matchSearch;\n  });\n\n  return (\n    <div className=\"plan-page\">\n      {/* 1. 상단 타이틀 영역 */}\n      <section className=\"plan-page__header\">\n        <h1 className=\"plan-page__title\">“Plan your journey, live the adventure”</h1>\n        <p className=\"plan-page__subtitle\">“Hit the road. Make new memories.”</p>\n      </section>\n\n      {/* 2. 탭 및 필터 아이콘 영역 */}\n      <div className=\"plan-page__controls\">\n        <div className=\"plan-page__tabs\">\n          {tabList.map((tabName) => (\n            <button\n              key={tabName}\n              className={`tab ${activeTab === tabName ? 'tab--active' : ''}`}\n              onClick={() => setActiveTab(tabName)}\n            >\n              {tabName}\n            </button>\n          ))}\n        </div>\n        <div className=\"search\">\n          <input\n            type=\"text\"\n            placeholder=\"Search...\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {/* 3. 메인 콘텐츠: 좌측 카드 리스트 + 우측 지도 영역 */}\n      <div className=\"plan-page__content\">\n        {/* 좌측 카드 리스트 */}\n        <div className=\"plan-page__list\">\n          {/* Plan 탭 */}\n          {activeTab === 'Plan' && savedPlans.map((loc) => (\n            <div key={loc.id} className=\"plan_card\">\n              <img\n                src={loc.image}\n                alt={loc.title}\n                className=\"plan_card__image\"\n              />\n              <div className=\"plan_card__body\">\n                <div className=\"plan_card__title\">\n                  <span>{loc.title}</span>\n                </div>\n                <p className=\"plan_card__desc\">{loc.description}</p>\n                {loc.address && (\n                  <div className=\"plan_card__address\">\n\n                    <span>{loc.address}</span>\n                  </div>\n                )}\n              </div>\n              {/* favorite */}\n              <button className=\"plan_card__delete\" title=\"삭제하기\">×</button>\n            </div>\n          ))}\n          {activeTab === 'Plan' && \n            <button\n              className=\"plan-page__add-button\"\n              onClick={handleAddPlan}\n            >\n              + 플랜 추가\n            </button>\n          }\n          {/* Place 탭 */}\n          {activeTab === 'Place' && filtered.map((place) => (\n            <div key={place.id} className=\"plan_card\">\n              <img\n                src={place.img}\n                alt={place.name}\n                className=\"plan_card__image\"\n              />\n              <div className=\"plan_card__body\">\n                <div className=\"plan_card__title\">\n                  <span>{place.name}</span>\n                </div>\n                <p className=\"plan_card__desc\">{place.description}</p>\n                {place.address && (\n                  <div className=\"plan_card__address\">\n                    <span>{place.address}</span>\n                  </div>\n                )}\n              </div>\n              <span className={`plan_card__favorite${place.favorite ? ' --active' : ''}`} >{place.favorite ? '♥' : '♡'}</span>\n            </div>\n          ))}\n        </div>\n\n        {/* 우측 지도 영역 */}\n        <div className=\"plan-page__map\">\n          <div className=\"map-placeholder\">\n            지도 컴포넌트가 여기에 들어갑니다.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;;AAEnB;AACA,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,OAAO,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;;AAEjC;AACA;;AAGA,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMsB,KAAK,GAAG,CACZ;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE,UAAU;IACvBC,OAAO,EAAE,gBAAgB;IACzBC,KAAK,EAAEzB;EACT,CAAC,EACD;IACEqB,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,UAAU;IACvBC,OAAO,EAAE,mBAAmB;IAC5BC,KAAK,EAAExB;EACT,CAAC,EACD;IACEoB,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,UAAU;IACvBC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAEvB;EACT,CAAC,EACD;IACEmB,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,UAAU;IACvBC,OAAO,EAAE,mBAAmB;IAC5BC,KAAK,EAAExB;EACT,CAAC,EACD;IACEoB,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,UAAU;IACvBC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAEvB;EACT,CAAC,CACF;EAED,MAAMwB,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,OAAO,GAAG;MACdN,EAAE,EAAEO,IAAI,CAACC,GAAG,CAAC,CAAC;MACdP,KAAK,EAAE,MAAM;MACbC,WAAW,EAAE,eAAe;MAC5BC,OAAO,EAAE,cAAc;MACvBC,KAAK,EAAEzB,IAAI,CAAE;IACf,CAAC;IACDmB,aAAa,CAACW,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEH,OAAO,CAAC,CAAC;EAC3C,CAAC;;EAED;EACA5B,SAAS,CAAC,MAAM;IACd,MAAMgC,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,IAAI;QACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE;QACjE;QACA,MAAMC,gBAAgB,GAAGL,OAAO,CAACM,GAAG,CAACC,MAAM,KAAK;UAC9C,GAAGA,MAAM;UACT;UACAC,GAAG,EAAED,MAAM,CAACC,GAAG,KAAKD,MAAM,CAAClB,EAAE,GAAG,CAAC,KAAK,CAAC,GAAGhB,IAAI,GACxCkC,MAAM,CAAClB,EAAE,GAAG,CAAC,KAAK,CAAC,GAAGjB,IAAI,GAC1BmC,MAAM,CAAClB,EAAE,GAAG,CAAC,KAAK,CAAC,GAAGlB,IAAI,GAC1BoC,MAAM,CAAClB,EAAE,GAAG,CAAC,KAAK,CAAC,GAAGnB,IAAI,GAC1BqC,MAAM,CAAClB,EAAE,GAAG,CAAC,KAAK,CAAC,GAAGpB,IAAI,GAAGD,IAAI,CAAC;UACxC;UACAqB,EAAE,EAAEkB,MAAM,CAAClB,EAAE,IAAI,IAAIO,IAAI,CAAC,CAAC,CAACa,OAAO,CAAC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;UACxE;UACAC,QAAQ,EAAEN,MAAM,CAACM,QAAQ,IAAIN,MAAM,CAACO,IAAI;UACxC;UACAC,QAAQ,EAAER,MAAM,CAACQ,QAAQ,IAAIR,MAAM,CAACO,IAAI;UACxC;UACAE,QAAQ,EAAET,MAAM,CAACS,QAAQ,IAAIC,eAAe,CAACV,MAAM,CAACf,OAAO,CAAC,IAAI,SAAS;UACzE;UACA0B,IAAI,EAAEX,MAAM,CAACW,IAAI,IAAI,UAAU;UAC/B;UACAC,IAAI,EAAEZ,MAAM,CAACY,IAAI,IAAI,IAAI;UACzB;UACAC,OAAO,EAAEb,MAAM,CAACa,OAAO,IAAI,KAAK;UAChC;UACAC,QAAQ,EAAEd,MAAM,CAACc,QAAQ,IAAI;QAC/B,CAAC,CAAC,CAAC;QACHpC,iBAAiB,CAACoB,gBAAgB,CAAC;MACrC,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDrC,iBAAiB,CAAC,EAAE,CAAC;MACvB;IACF,CAAC;IAEDc,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMkB,eAAe,GAAIzB,OAAO,IAAK;IACnC,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;;IAEvB;IACA,MAAMgC,SAAS,GAAGhC,OAAO,CAACiC,KAAK,CAAC,2BAA2B,CAAC;IAC5D,IAAID,SAAS,EAAE;MACb;MACA,OAAOA,SAAS,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;IACvD;IACA,OAAO,EAAE;EACX,CAAC;EAED,MAAMC,OAAO,GAAG;EACd;EACA,GAAG5C,cAAc,CAClB;EACD,MAAM6C,WAAW,GAAG/C,MAAM,CAAC6C,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;EAC/C,MAAMC,QAAQ,GAAGH,OAAO,CAACI,MAAM,CAACC,IAAI,IAAI;IAAA,IAAAC,cAAA,EAAAC,cAAA,EAAAC,UAAA;IACtC,MAAMC,WAAW,GACf,EAAAH,cAAA,GAAAD,IAAI,CAAClB,QAAQ,cAAAmB,cAAA,uBAAbA,cAAA,CAAeJ,WAAW,CAAC,CAAC,CAACQ,QAAQ,CAACT,WAAW,CAAC,OAAAM,cAAA,GAClDF,IAAI,CAACpB,QAAQ,cAAAsB,cAAA,uBAAbA,cAAA,CAAeL,WAAW,CAAC,CAAC,CAACQ,QAAQ,CAACT,WAAW,CAAC,OAAAO,UAAA,GAClDH,IAAI,CAACnB,IAAI,cAAAsB,UAAA,uBAATA,UAAA,CAAWN,WAAW,CAAC,CAAC,CAACQ,QAAQ,CAACT,WAAW,CAAC;IAChD,OAAOA,WAAW,KAAK,EAAE,IAAIQ,WAAW;EAC1C,CAAC,CAAC;EAEF,oBACE7D,OAAA;IAAK+D,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBhE,OAAA;MAAS+D,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBACpChE,OAAA;QAAI+D,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7EpE,OAAA;QAAG+D,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eAGVpE,OAAA;MAAK+D,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClChE,OAAA;QAAK+D,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7B/D,OAAO,CAAC6B,GAAG,CAAEuC,OAAO,iBACnBrE,OAAA;UAEE+D,SAAS,EAAE,OAAO3D,SAAS,KAAKiE,OAAO,GAAG,aAAa,GAAG,EAAE,EAAG;UAC/DC,OAAO,EAAEA,CAAA,KAAMjE,YAAY,CAACgE,OAAO,CAAE;UAAAL,QAAA,EAEpCK;QAAO,GAJHA,OAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKN,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNpE,OAAA;QAAK+D,SAAS,EAAC,QAAQ;QAAAC,QAAA,eACrBhE,OAAA;UACE0C,IAAI,EAAC,MAAM;UACX6B,WAAW,EAAC,WAAW;UACvBC,KAAK,EAAElE,MAAO;UACdmE,QAAQ,EAAEC,CAAC,IAAInE,SAAS,CAACmE,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNpE,OAAA;MAAK+D,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAEjChE,OAAA;QAAK+D,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAE7B5D,SAAS,KAAK,MAAM,IAAIM,UAAU,CAACoB,GAAG,CAAE8C,GAAG,iBAC1C5E,OAAA;UAAkB+D,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACrChE,OAAA;YACE6E,GAAG,EAAED,GAAG,CAAC3D,KAAM;YACf6D,GAAG,EAAEF,GAAG,CAAC9D,KAAM;YACfiD,SAAS,EAAC;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACFpE,OAAA;YAAK+D,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BhE,OAAA;cAAK+D,SAAS,EAAC,kBAAkB;cAAAC,QAAA,eAC/BhE,OAAA;gBAAAgE,QAAA,EAAOY,GAAG,CAAC9D;cAAK;gBAAAmD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,eACNpE,OAAA;cAAG+D,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAEY,GAAG,CAAC7D;YAAW;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACnDQ,GAAG,CAAC5D,OAAO,iBACVhB,OAAA;cAAK+D,SAAS,EAAC,oBAAoB;cAAAC,QAAA,eAEjChE,OAAA;gBAAAgE,QAAA,EAAOY,GAAG,CAAC5D;cAAO;gBAAAiD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAENpE,OAAA;YAAQ+D,SAAS,EAAC,mBAAmB;YAACjD,KAAK,EAAC,0BAAM;YAAAkD,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAnBrDQ,GAAG,CAAC/D,EAAE;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoBX,CACN,CAAC,EACDhE,SAAS,KAAK,MAAM,iBACnBJ,OAAA;UACE+D,SAAS,EAAC,uBAAuB;UACjCO,OAAO,EAAEpD,aAAc;UAAA8C,QAAA,EACxB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAGVhE,SAAS,KAAK,OAAO,IAAImD,QAAQ,CAACzB,GAAG,CAAEiD,KAAK,iBAC3C/E,OAAA;UAAoB+D,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACvChE,OAAA;YACE6E,GAAG,EAAEE,KAAK,CAAC/C,GAAI;YACf8C,GAAG,EAAEC,KAAK,CAACzC,IAAK;YAChByB,SAAS,EAAC;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACFpE,OAAA;YAAK+D,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BhE,OAAA;cAAK+D,SAAS,EAAC,kBAAkB;cAAAC,QAAA,eAC/BhE,OAAA;gBAAAgE,QAAA,EAAOe,KAAK,CAACzC;cAAI;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC,eACNpE,OAAA;cAAG+D,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAEe,KAAK,CAAChE;YAAW;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACrDW,KAAK,CAAC/D,OAAO,iBACZhB,OAAA;cAAK+D,SAAS,EAAC,oBAAoB;cAAAC,QAAA,eACjChE,OAAA;gBAAAgE,QAAA,EAAOe,KAAK,CAAC/D;cAAO;gBAAAiD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNpE,OAAA;YAAM+D,SAAS,EAAE,sBAAsBgB,KAAK,CAAClC,QAAQ,GAAG,WAAW,GAAG,EAAE,EAAG;YAAAmB,QAAA,EAAGe,KAAK,CAAClC,QAAQ,GAAG,GAAG,GAAG;UAAG;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAjBxGW,KAAK,CAAClE,EAAE;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBb,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNpE,OAAA;QAAK+D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BhE,OAAA;UAAK+D,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAEjC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjE,EAAA,CAhOuBD,IAAI;AAAA8E,EAAA,GAAJ9E,IAAI;AAAA,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}