{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\username\\\\Desktop\\\\newweb\\\\src\\\\pages\\\\Plan.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Plan.css';\nimport PlanModal from '../components/Modal.js';\nimport PlanModalEdit from '../components/Modal_edit.js';\nimport img1 from '../assets/1.PNG';\nimport img2 from '../assets/2.PNG';\nimport img3 from '../assets/3.PNG';\nimport img4 from '../assets/4.PNG';\nimport img5 from '../assets/5.PNG';\nimport img6 from '../assets/6.PNG';\nimport imgDefault from '../assets/dafault-place.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabList = ['Plan', 'Place'];\nexport default function Plan() {\n  _s();\n  // 현재 선택된 탭 상태 (Plan / Favorite / Saved)\n  const [activeTab, setActiveTab] = useState('Plan');\n  const [search, setSearch] = useState('');\n  const [savedLocations, setSavedLocations] = useState([]);\n  const [savedPlans, setSavedPlans] = useState([]);\n  const [isPlanModalOpen, setIsPlanModalOpen] = useState(false);\n  const [isPlanModalEditOpen, setIsPlanModalEditOpen] = useState(false);\n  const [planName, setPlanName] = useState('');\n  const [planDescription, setPlanDescription] = useState('');\n  const [planAddress, setPlanAddress] = useState('');\n  const [planUploadedImage, setPlanUploadedImage] = useState(null); // 업로드된 이미지\n  const [planImagePreview, setPlanImagePreview] = useState(''); // 이미지 미리보기 URL\n  const [placeList, setPlaceList] = useState([1749323194276, 1749323197619]);\n  const [planEditIndex, setPlanEditIndex] = useState(0);\n\n  // localStorage에서 저장된 위치 정보를 로드하는 함수\n  useEffect(() => {\n    const loadSavedLocations = () => {\n      try {\n        const markers = JSON.parse(localStorage.getItem('markers')) || [];\n        // 데이터 형식 확인 및 보완\n        const processedMarkers = markers.map(marker => ({\n          ...marker,\n          // 기본 이미지 없는 경우 처리 (내장된 이미지 사용)\n          img: marker.img || (marker.id % 6 === 0 ? img6 : marker.id % 5 === 0 ? img5 : marker.id % 4 === 0 ? img4 : marker.id % 3 === 0 ? img3 : marker.id % 2 === 0 ? img2 : img1),\n          // id가 없는 경우 새로 생성\n          id: marker.id || new Date().getTime() + Math.floor(Math.random() * 1000),\n          // titleKor이 없으면 name으로 설정\n          titleKor: marker.titleKor || marker.name,\n          // titleEng가 없으면 name으로 설정\n          titleEng: marker.titleEng || marker.name,\n          // location이 없는 경우 주소에서 추출 시도\n          location: marker.location || extractLocation(marker.address) || 'Unknown',\n          // 기본 유형 설정\n          type: marker.type || 'Landmark',\n          // 기본 체류시간 설정\n          stay: marker.stay || '1h',\n          // 기본적으로 인기 아님\n          popular: marker.popular || false,\n          // 기본적으로 favorite 아님\n          favorite: marker.favorite || false\n        }));\n        setSavedLocations(processedMarkers);\n      } catch (error) {\n        console.error('저장된 위치 정보를 불러오는 중 오류가 발생했습니다:', error);\n        setSavedLocations([]);\n      }\n    };\n    const loadSavedplans = () => {\n      try {\n        const plans = JSON.parse(localStorage.getItem('plans')) || [];\n        setSavedPlans(plans);\n      } catch (error) {\n        console.error('저장된 계획 정보를 불러오는 중 오류가 발생했습니다:', error);\n        setSavedPlans([]);\n      }\n    };\n    loadSavedLocations();\n    loadSavedplans();\n  }, []);\n  const handleAddPlan = () => {\n    const newPlan = {\n      id: Date.now(),\n      title: planName === '' ? '빈 이름' : planName,\n      description: planDescription === '' ? '빈 설명' : planDescription,\n      address: planAddress === '' ? '빈 주소' : planAddress,\n      image: planUploadedImage === null ? imgDefault : planUploadedImage,\n      savedDate: new Date().toISOString(),\n      // 저장 날짜\n      placeList: []\n    };\n\n    // localStorage에 기존 데이터 불러오기\n    let plans = JSON.parse(localStorage.getItem(\"plans\")) || [];\n    plans.push(newPlan);\n\n    // localStorage에 저장\n    localStorage.setItem(\"plans\", JSON.stringify(plans));\n    setSavedPlans(prev => [...prev, newPlan]);\n    setPlanName('');\n    setPlanDescription('');\n    setPlanAddress('');\n    setPlanUploadedImage(null);\n    setPlanImagePreview('');\n    setIsPlanModalOpen(false);\n  };\n  const handleEditPlan = () => {\n    const updatedPlans = [...savedPlans];\n    updatedPlans[planEditIndex] = {\n      ...updatedPlans[planEditIndex],\n      placeList: placeList\n    };\n    setSavedPlans(updatedPlans);\n    localStorage.setItem('plans', JSON.stringify(updatedPlans));\n    setPlaceList([]);\n    setIsPlanModalEditOpen(false);\n  };\n  const handleDeletePlan = index => {\n    const updatedPlans = [...savedPlans];\n    updatedPlans.splice(index, 1);\n    setSavedPlans(updatedPlans);\n    localStorage.setItem('plans', JSON.stringify(updatedPlans));\n  };\n\n  // 주소에서 지역명 추출 함수\n  const extractLocation = address => {\n    if (!address) return '';\n\n    // 시/도 추출 (서울특별시, 경기도 등)\n    const cityMatch = address.match(/([^\\s]+시|[^\\s]+도|[^\\s]+군)/);\n    if (cityMatch) {\n      // \"특별시\", \"광역시\" 등의 접미사 제거\n      return cityMatch[0].replace(/특별시|광역시|자치시/, '').trim();\n    }\n    return '';\n  };\n  const allPlaceData = [...savedLocations];\n  const lowerSearch = search.trim().toLowerCase();\n  const filtered_place = allPlaceData.filter(item => {\n    var _item$titleEng, _item$titleKor, _item$name;\n    const matchSearch = ((_item$titleEng = item.titleEng) === null || _item$titleEng === void 0 ? void 0 : _item$titleEng.toLowerCase().includes(lowerSearch)) || ((_item$titleKor = item.titleKor) === null || _item$titleKor === void 0 ? void 0 : _item$titleKor.toLowerCase().includes(lowerSearch)) || ((_item$name = item.name) === null || _item$name === void 0 ? void 0 : _item$name.toLowerCase().includes(lowerSearch));\n    return lowerSearch === '' || matchSearch;\n  });\n  const allPlanData = [...savedPlans];\n  const filtered_plan = allPlanData.filter(item => {\n    var _item$title;\n    const matchSearch = (_item$title = item.title) === null || _item$title === void 0 ? void 0 : _item$title.toLowerCase().includes(lowerSearch);\n    return lowerSearch === '' || matchSearch;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plan-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"plan-page__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"plan-page__title\",\n        children: \"\\u201CPlan your journey, live the adventure\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"plan-page__subtitle\",\n        children: \"\\u201CHit the road. Make new memories.\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-page__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-page__tabs\",\n        children: tabList.map(tabName => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === tabName ? 'tab--active' : ''}`,\n          onClick: () => setActiveTab(tabName),\n          children: tabName\n        }, tabName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search...\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-page__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-page__list\",\n        children: [activeTab === 'Plan' && filtered_plan.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan_card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: plan.image,\n            alt: plan.title,\n            className: \"plan_card__image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan_card__body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__title\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: plan.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"plan_card__desc\",\n              children: plan.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), plan.address && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__address\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: plan.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"plan_card__delete\",\n            title: \"\\uC0AD\\uC81C\\uD558\\uAE30\",\n            onClick: () => handleDeletePlan(index),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"plan_card__edit\",\n            title: \"\\uC218\\uC815\\uD558\\uAE30\",\n            onClick: () => {\n              setPlanEditIndex(index);\n              setPlaceList(plan.placeList);\n              setIsPlanModalEditOpen(true);\n            },\n            children: \"\\uD83D\\uDD89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, plan.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)), activeTab === 'Plan' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plan_card__add-button\",\n          onClick: () => setIsPlanModalOpen(true),\n          children: \"+ \\uD50C\\uB79C \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), activeTab === 'Place' && filtered_place.map(place => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan_card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: place.img,\n            alt: place.name,\n            className: \"plan_card__image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan_card__body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__title\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: place.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"plan_card__desc\",\n              children: place.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), place.address && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__address\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: place.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `plan_card__favorite${place.favorite ? ' --active' : ''}`,\n            children: place.favorite ? '♥' : '♡'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, place.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-page__map\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-placeholder\",\n          children: \"\\uC9C0\\uB3C4 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uAC00 \\uC5EC\\uAE30\\uC5D0 \\uB4E4\\uC5B4\\uAC11\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlanModal, {\n      visible: isPlanModalOpen,\n      onClose: () => setIsPlanModalOpen(false),\n      onCreate: handleAddPlan,\n      planName: planName,\n      setPlanName: setPlanName,\n      description: planDescription,\n      setDescription: setPlanDescription,\n      address: planAddress,\n      setAddress: setPlanAddress,\n      uploadedImage: planUploadedImage,\n      setUploadedImage: setPlanUploadedImage,\n      imagePreview: planImagePreview,\n      setImagePreview: setPlanImagePreview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlanModalEdit, {\n      visible: isPlanModalEditOpen,\n      onClose: () => setIsPlanModalEditOpen(false),\n      onEdit: handleEditPlan,\n      placeList: placeList,\n      setPlaceList: setPlaceList,\n      savedLocations: savedLocations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(Plan, \"OEkkAoJ9Jbb7PvF52Kumo7/oeqU=\");\n_c = Plan;\nvar _c;\n$RefreshReg$(_c, \"Plan\");","map":{"version":3,"names":["React","useState","useEffect","PlanModal","PlanModalEdit","img1","img2","img3","img4","img5","img6","imgDefault","jsxDEV","_jsxDEV","tabList","Plan","_s","activeTab","setActiveTab","search","setSearch","savedLocations","setSavedLocations","savedPlans","setSavedPlans","isPlanModalOpen","setIsPlanModalOpen","isPlanModalEditOpen","setIsPlanModalEditOpen","planName","setPlanName","planDescription","setPlanDescription","planAddress","setPlanAddress","planUploadedImage","setPlanUploadedImage","planImagePreview","setPlanImagePreview","placeList","setPlaceList","planEditIndex","setPlanEditIndex","loadSavedLocations","markers","JSON","parse","localStorage","getItem","processedMarkers","map","marker","img","id","Date","getTime","Math","floor","random","titleKor","name","titleEng","location","extractLocation","address","type","stay","popular","favorite","error","console","loadSavedplans","plans","handleAddPlan","newPlan","now","title","description","image","savedDate","toISOString","push","setItem","stringify","prev","handleEditPlan","updatedPlans","handleDeletePlan","index","splice","cityMatch","match","replace","trim","allPlaceData","lowerSearch","toLowerCase","filtered_place","filter","item","_item$titleEng","_item$titleKor","_item$name","matchSearch","includes","allPlanData","filtered_plan","_item$title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tabName","onClick","placeholder","value","onChange","e","target","plan","src","alt","place","visible","onClose","onCreate","setDescription","setAddress","uploadedImage","setUploadedImage","imagePreview","setImagePreview","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/username/Desktop/newweb/src/pages/Plan.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Plan.css';\nimport PlanModal from '../components/Modal.js';\nimport PlanModalEdit from '../components/Modal_edit.js';\n\nimport img1 from '../assets/1.PNG';\nimport img2 from '../assets/2.PNG';\nimport img3 from '../assets/3.PNG';\nimport img4 from '../assets/4.PNG';\nimport img5 from '../assets/5.PNG';\nimport img6 from '../assets/6.PNG';\nimport imgDefault from '../assets/dafault-place.png';\n\n\nconst tabList = ['Plan', 'Place'];\n\n\nexport default function Plan() {\n  // 현재 선택된 탭 상태 (Plan / Favorite / Saved)\n  const [activeTab, setActiveTab] = useState('Plan');\n  const [search, setSearch] = useState('');\n  const [savedLocations, setSavedLocations] = useState([]);\n  const [savedPlans, setSavedPlans] = useState([]);\n\n  const [isPlanModalOpen, setIsPlanModalOpen] = useState(false);\n  const [isPlanModalEditOpen, setIsPlanModalEditOpen] = useState(false);\n  const [planName, setPlanName] = useState('');\n  const [planDescription, setPlanDescription] = useState('');\n  const [planAddress, setPlanAddress] = useState('');\n  const [planUploadedImage, setPlanUploadedImage] = useState(null); // 업로드된 이미지\n  const [planImagePreview, setPlanImagePreview] = useState(''); // 이미지 미리보기 URL\n  const [placeList, setPlaceList] = useState([1749323194276, 1749323197619]);\n  const [planEditIndex, setPlanEditIndex] = useState(0);\n\n  // localStorage에서 저장된 위치 정보를 로드하는 함수\n  useEffect(() => {\n    const loadSavedLocations = () => {\n      try {\n        const markers = JSON.parse(localStorage.getItem('markers')) || [];\n        // 데이터 형식 확인 및 보완\n        const processedMarkers = markers.map(marker => ({\n          ...marker,\n          // 기본 이미지 없는 경우 처리 (내장된 이미지 사용)\n          img: marker.img || (marker.id % 6 === 0 ? img6 : \n                marker.id % 5 === 0 ? img5 :\n                marker.id % 4 === 0 ? img4 :\n                marker.id % 3 === 0 ? img3 :\n                marker.id % 2 === 0 ? img2 : img1),\n          // id가 없는 경우 새로 생성\n          id: marker.id || new Date().getTime() + Math.floor(Math.random() * 1000),\n          // titleKor이 없으면 name으로 설정\n          titleKor: marker.titleKor || marker.name,\n          // titleEng가 없으면 name으로 설정\n          titleEng: marker.titleEng || marker.name,\n          // location이 없는 경우 주소에서 추출 시도\n          location: marker.location || extractLocation(marker.address) || 'Unknown',\n          // 기본 유형 설정\n          type: marker.type || 'Landmark',\n          // 기본 체류시간 설정\n          stay: marker.stay || '1h',\n          // 기본적으로 인기 아님\n          popular: marker.popular || false,\n          // 기본적으로 favorite 아님\n          favorite: marker.favorite || false\n        }));\n        setSavedLocations(processedMarkers);\n      } catch (error) {\n        console.error('저장된 위치 정보를 불러오는 중 오류가 발생했습니다:', error);\n        setSavedLocations([]);\n      }\n    };\n\n    const loadSavedplans = () => {\n      try {\n        const plans = JSON.parse(localStorage.getItem('plans')) || [];\n        setSavedPlans(plans);\n      } catch (error) {\n        console.error('저장된 계획 정보를 불러오는 중 오류가 발생했습니다:', error);\n        setSavedPlans([]);\n      }\n    };\n    \n    loadSavedLocations();\n    loadSavedplans();\n  }, []);\n\n  const handleAddPlan = () => {\n    const newPlan = {\n      id: Date.now(),\n      title: planName === '' ? '빈 이름' : planName,\n      description: planDescription === '' ? '빈 설명' : planDescription,\n      address: planAddress === '' ? '빈 주소' : planAddress,\n      image: planUploadedImage === null ? imgDefault : planUploadedImage,\n      savedDate: new Date().toISOString(), // 저장 날짜\n      placeList: [],\n    };\n\n    // localStorage에 기존 데이터 불러오기\n    let plans = JSON.parse(localStorage.getItem(\"plans\")) || [];\n    plans.push(newPlan);\n\n    // localStorage에 저장\n    localStorage.setItem(\"plans\", JSON.stringify(plans));\n\n    setSavedPlans(prev => [...prev, newPlan]);\n\n    setPlanName('');\n    setPlanDescription('');\n    setPlanAddress('');\n    setPlanUploadedImage(null);\n    setPlanImagePreview('');\n    setIsPlanModalOpen(false);\n  };\n\n  const handleEditPlan = () => {\n    const updatedPlans = [...savedPlans];\n    updatedPlans[planEditIndex] = {\n      ...updatedPlans[planEditIndex],\n      placeList: placeList,\n    };\n\n    setSavedPlans(updatedPlans);\n    localStorage.setItem('plans', JSON.stringify(updatedPlans));\n\n    setPlaceList([]);\n    setIsPlanModalEditOpen(false);\n  };\n\n  const handleDeletePlan = (index) => {\n    const updatedPlans = [...savedPlans];\n    updatedPlans.splice(index, 1);\n    setSavedPlans(updatedPlans);\n    localStorage.setItem('plans', JSON.stringify(updatedPlans));\n  };\n\n  \n\n  // 주소에서 지역명 추출 함수\n  const extractLocation = (address) => {\n    if (!address) return '';\n    \n    // 시/도 추출 (서울특별시, 경기도 등)\n    const cityMatch = address.match(/([^\\s]+시|[^\\s]+도|[^\\s]+군)/);\n    if (cityMatch) {\n      // \"특별시\", \"광역시\" 등의 접미사 제거\n      return cityMatch[0].replace(/특별시|광역시|자치시/, '').trim();\n    }\n    return '';\n  };\n\n  const allPlaceData = [\n    ...savedLocations\n  ];\n  const lowerSearch = search.trim().toLowerCase();\n  const filtered_place = allPlaceData.filter(item => {\n    const matchSearch =\n      item.titleEng?.toLowerCase().includes(lowerSearch) ||\n      item.titleKor?.toLowerCase().includes(lowerSearch) ||\n      item.name?.toLowerCase().includes(lowerSearch);\n    return lowerSearch === '' || matchSearch;\n  });\n\n  const allPlanData = [\n    ...savedPlans\n  ];\n  const filtered_plan = allPlanData.filter(item => {\n    const matchSearch =\n      item.title?.toLowerCase().includes(lowerSearch);\n    return lowerSearch === '' || matchSearch;\n  });\n\n\n\n  return (\n    <div className=\"plan-page\">\n      {/* 1. 상단 타이틀 영역 */}\n      <section className=\"plan-page__header\">\n        <h1 className=\"plan-page__title\">“Plan your journey, live the adventure”</h1>\n        <p className=\"plan-page__subtitle\">“Hit the road. Make new memories.”</p>\n      </section>\n\n      {/* 2. 탭 및 필터 아이콘 영역 */}\n      <div className=\"plan-page__controls\">\n        <div className=\"plan-page__tabs\">\n          {tabList.map((tabName) => (\n            <button\n              key={tabName}\n              className={`tab ${activeTab === tabName ? 'tab--active' : ''}`}\n              onClick={() => setActiveTab(tabName)}\n            >\n              {tabName}\n            </button>\n          ))}\n        </div>\n        <div className=\"search\">\n          <input\n            type=\"text\"\n            placeholder=\"Search...\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {/* 3. 메인 콘텐츠: 좌측 카드 리스트 + 우측 지도 영역 */}\n      <div className=\"plan-page__content\">\n        {/* 좌측 카드 리스트 */}\n        <div className=\"plan-page__list\">\n          {/* Plan 탭 */}\n          {activeTab === 'Plan' && filtered_plan.map((plan, index) => (\n            <div key={plan.id} className=\"plan_card\">\n              <img\n                src={plan.image}\n                alt={plan.title}\n                className=\"plan_card__image\"\n              />\n              <div className=\"plan_card__body\">\n                <div className=\"plan_card__title\">\n                  <span>{plan.title}</span>\n                </div>\n                <p className=\"plan_card__desc\">{plan.description}</p>\n                {plan.address && (\n                  <div className=\"plan_card__address\">\n\n                    <span>{plan.address}</span>\n                  </div>\n                )}\n              </div>\n              {/* favorite */}\n              <button className=\"plan_card__delete\" title=\"삭제하기\" onClick={() => handleDeletePlan(index)}>×</button>\n              <button className=\"plan_card__edit\" title=\"수정하기\" onClick={() => {setPlanEditIndex(index); setPlaceList(plan.placeList); setIsPlanModalEditOpen(true);}}>🖉</button>\n            </div>\n          ))}\n          {activeTab === 'Plan' && \n            <button\n              className=\"plan_card__add-button\"\n              onClick={() => setIsPlanModalOpen(true)}\n            >\n              + 플랜 추가\n            </button>\n          }\n          {/* Place 탭 */}\n          {activeTab === 'Place' && filtered_place.map((place) => (\n            <div key={place.id} className=\"plan_card\">\n              <img\n                src={place.img}\n                alt={place.name}\n                className=\"plan_card__image\"\n              />\n              <div className=\"plan_card__body\">\n                <div className=\"plan_card__title\">\n                  <span>{place.name}</span>\n                </div>\n                <p className=\"plan_card__desc\">{place.description}</p>\n                {place.address && (\n                  <div className=\"plan_card__address\">\n                    <span>{place.address}</span>\n                  </div>\n                )}\n              </div>\n              <span className={`plan_card__favorite${place.favorite ? ' --active' : ''}`} >{place.favorite ? '♥' : '♡'}</span>\n            </div>\n          ))}\n        </div>\n\n        {/* 우측 지도 영역 */}\n        <div className=\"plan-page__map\">\n          <div className=\"map-placeholder\">\n            지도 컴포넌트가 여기에 들어갑니다.\n          </div>\n        </div>\n      </div>\n      <PlanModal\n        visible={isPlanModalOpen}\n        onClose={() => setIsPlanModalOpen(false)}\n        onCreate={handleAddPlan}\n        planName={planName}\n        setPlanName={setPlanName}\n        description={planDescription}\n        setDescription={setPlanDescription}\n        address={planAddress}\n        setAddress={setPlanAddress}\n        uploadedImage={planUploadedImage}\n        setUploadedImage={setPlanUploadedImage}\n        imagePreview={planImagePreview}\n        setImagePreview={setPlanImagePreview}\n      />\n      <PlanModalEdit\n        visible={isPlanModalEditOpen}\n        onClose={() => setIsPlanModalEditOpen(false)}\n        onEdit={handleEditPlan}\n        placeList={placeList}\n        setPlaceList={setPlaceList}\n        savedLocations={savedLocations}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}