{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\username\\\\Desktop\\\\newweb\\\\src\\\\pages\\\\Plan.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Plan.css';\n\n// TODO: 아래 이미지는 실제 경로에 맞게 교체해주세요.\nimport img1 from '../assets/남산타워.PNG';\nimport img2 from '../assets/전주한옥마을.PNG';\nimport img3 from '../assets/세종대학교.PNG';\n\n// TODO: 아이콘 파일(하트, 위치 아이콘, 필터 아이콘 등)도 실제 프로젝트 내 경로에 맞춰 교체하거나\n//       react-icons/FontAwesome 등으로 대체하셔도 됩니다.\nimport { ReactComponent as HeartIcon } from '../assets/icons/heart.svg';\nimport { ReactComponent as LocationIcon } from '../assets/icons/location.svg';\nimport { ReactComponent as FilterIcon } from '../assets/icons/filter.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Plan() {\n  _s();\n  // 현재 선택된 탭 상태 (Plan / Favorite / Saved)\n  const [activeTab, setActiveTab] = useState('Plan');\n\n  // 카드 데이터 (실제 API에서 받아온 값으로 교체 가능)\n  const locations = [{\n    id: 1,\n    title: '세종대학교',\n    description: '설명 들어갈 간',\n    address: '서울 광진구 군자로 114',\n    image: img1\n  }, {\n    id: 2,\n    title: '어린이대공원',\n    description: '설명 들어갈 간',\n    address: '서울특별시 광진구 능동로 216',\n    image: img2\n  }, {\n    id: 3,\n    title: '다른 무엇가',\n    description: `각 리스트의 사이는 30px, 사진의 radius는 20\n주소, 아이콘 이모지는 다르게 해도 됨.`,\n    address: '',\n    image: img3\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plan-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"plan-page__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"plan-page__title\",\n        children: \"\\u201CPlan your journey, live the adventure\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"plan-page__subtitle\",\n        children: \"\\u201CHit the road. Make new memories.\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-page__tabs\",\n      children: [['Plan', 'Favorite', 'Saved'].map(tabName => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === tabName ? 'tab--active' : ''}`,\n        onClick: () => setActiveTab(tabName),\n        children: tabName\n      }, tabName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tab-icon\",\n        children: /*#__PURE__*/_jsxDEV(FilterIcon, {\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-page__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-page__list\",\n        children: locations.map(loc => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: loc.image,\n            alt: loc.title,\n            className: \"card__image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card__title\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: loc.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"card__heart-btn\",\n                children: /*#__PURE__*/_jsxDEV(HeartIcon, {\n                  width: 18,\n                  height: 18\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card__desc\",\n              children: loc.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), loc.address && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card__address\",\n              children: [/*#__PURE__*/_jsxDEV(LocationIcon, {\n                width: 16,\n                height: 16,\n                className: \"card__address-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: loc.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, loc.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-page__map\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-placeholder\",\n          children: \"\\uC9C0\\uB3C4 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uAC00 \\uC5EC\\uAE30\\uC5D0 \\uB4E4\\uC5B4\\uAC11\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Plan, \"5+sVMs8a63rr4WnFzHmBtxiOpUo=\");\n_c = Plan;\nvar _c;\n$RefreshReg$(_c, \"Plan\");","map":{"version":3,"names":["React","useState","img1","img2","img3","ReactComponent","HeartIcon","LocationIcon","FilterIcon","jsxDEV","_jsxDEV","Plan","_s","activeTab","setActiveTab","locations","id","title","description","address","image","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tabName","onClick","width","height","loc","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/username/Desktop/newweb/src/pages/Plan.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Plan.css';\n\n// TODO: 아래 이미지는 실제 경로에 맞게 교체해주세요.\nimport img1 from '../assets/남산타워.PNG';\nimport img2 from '../assets/전주한옥마을.PNG';\nimport img3 from '../assets/세종대학교.PNG';\n\n// TODO: 아이콘 파일(하트, 위치 아이콘, 필터 아이콘 등)도 실제 프로젝트 내 경로에 맞춰 교체하거나\n//       react-icons/FontAwesome 등으로 대체하셔도 됩니다.\nimport { ReactComponent as HeartIcon }    from '../assets/icons/heart.svg';\nimport { ReactComponent as LocationIcon } from '../assets/icons/location.svg';\nimport { ReactComponent as FilterIcon }   from '../assets/icons/filter.svg';\n\nexport default function Plan() {\n  // 현재 선택된 탭 상태 (Plan / Favorite / Saved)\n  const [activeTab, setActiveTab] = useState('Plan');\n\n  // 카드 데이터 (실제 API에서 받아온 값으로 교체 가능)\n  const locations = [\n    {\n      id: 1,\n      title: '세종대학교',\n      description: '설명 들어갈 간',\n      address: '서울 광진구 군자로 114',\n      image: img1,\n    },\n    {\n      id: 2,\n      title: '어린이대공원',\n      description: '설명 들어갈 간',\n      address: '서울특별시 광진구 능동로 216',\n      image: img2,\n    },\n    {\n      id: 3,\n      title: '다른 무엇가',\n      description: `각 리스트의 사이는 30px, 사진의 radius는 20\n주소, 아이콘 이모지는 다르게 해도 됨.`,\n      address: '',\n      image: img3,\n    },\n  ];\n\n  return (\n    <div className=\"plan-page\">\n      {/* 1. 상단 타이틀 영역 */}\n      <section className=\"plan-page__header\">\n        <h1 className=\"plan-page__title\">“Plan your journey, live the adventure”</h1>\n        <p className=\"plan-page__subtitle\">“Hit the road. Make new memories.”</p>\n      </section>\n\n      {/* 2. 탭 및 필터 아이콘 영역 */}\n      <div className=\"plan-page__tabs\">\n        {['Plan', 'Favorite', 'Saved'].map((tabName) => (\n          <button\n            key={tabName}\n            className={`tab ${activeTab === tabName ? 'tab--active' : ''}`}\n            onClick={() => setActiveTab(tabName)}\n          >\n            {tabName}\n          </button>\n        ))}\n\n        {/* 오른쪽 필터 아이콘 */}\n        <button className=\"tab-icon\">\n          <FilterIcon width={20} height={20} />\n        </button>\n      </div>\n\n      {/* 3. 메인 콘텐츠: 좌측 카드 리스트 + 우측 지도 영역 */}\n      <div className=\"plan-page__content\">\n        {/* 좌측 카드 리스트 */}\n        <div className=\"plan-page__list\">\n          {locations.map((loc) => (\n            <div key={loc.id} className=\"card\">\n              <img\n                src={loc.image}\n                alt={loc.title}\n                className=\"card__image\"\n              />\n              <div className=\"card__body\">\n                <div className=\"card__title\">\n                  <span>{loc.title}</span>\n                  <button className=\"card__heart-btn\">\n                    <HeartIcon width={18} height={18} />\n                  </button>\n                </div>\n                <p className=\"card__desc\">{loc.description}</p>\n                {loc.address && (\n                  <div className=\"card__address\">\n                    <LocationIcon width={16} height={16} className=\"card__address-icon\" />\n                    <span>{loc.address}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* 우측 지도 영역 (실제 Google Map, Naver Map 등으로 대체) */}\n        <div className=\"plan-page__map\">\n          {/* \n            TODO: 실제 지도를 연동하려면, \n            예를 들어 react-google-maps, react-naver-maps 등의 라이브러리를 이용해 \n            <Map> 컴포넌트를 이 부분에 렌더링하세요. \n          */}\n          <div className=\"map-placeholder\">\n            지도 컴포넌트가 여기에 들어갑니다.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}