{"ast":null,"code":"var _jsxFileName = \"/Users/luca/workspace/HtmlCssJs_Project/plan_web/src/pages/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  const [markerInfo, setMarkerInfo] = useState(null);\n  const [showInput, setShowInput] = useState(false);\n  const [placeName, setPlaceName] = useState('');\n\n  // 장소를 localStorage에 저장\n  const saveMarkerToLocalStorage = () => {\n    if (!markerInfo) return;\n\n    // name이 없으면 기본값 설정\n    const name = placeName.trim() || `위치 ${new Date().toLocaleTimeString()}`;\n    const markerObj = {\n      name: name,\n      address: markerInfo.address,\n      lat: markerInfo.lat,\n      lng: markerInfo.lng\n    };\n\n    // localStorage에 기존 데이터 불러오기\n    let markers = JSON.parse(localStorage.getItem(\"markers\")) || [];\n    markers.push(markerObj);\n\n    // localStorage에 저장\n    localStorage.setItem(\"markers\", JSON.stringify(markers));\n\n    // 저장 완료 알림 및 상태 초기화\n    alert('위치가 저장되었습니다! Saved 메뉴에서 확인하세요.');\n    setPlaceName('');\n    setShowInput(false);\n  };\n  useEffect(() => {\n    // 네이버 지도 초기화 함수\n    const initializeMap = () => {\n      // 스크립트가 이미 index.html에 포함되어 있어야 합니다\n      if (!window.naver || !window.naver.maps) {\n        console.error('네이버 맵 API가 로드되지 않았습니다. index.html에 스크립트가 포함되어 있는지 확인하세요.');\n        return;\n      }\n      if (!mapRef.current) {\n        console.error('지도 컨테이너 요소를 찾을 수 없습니다');\n        return;\n      }\n      try {\n        // 초기 위치 (서울시청)\n        const latlng = new window.naver.maps.LatLng(37.5665, 126.9780);\n\n        // 지도 옵션 설정\n        const mapOptions = {\n          center: latlng,\n          zoom: 15,\n          zoomControl: true,\n          zoomControlOptions: {\n            position: window.naver.maps.Position.TOP_RIGHT\n          }\n        };\n\n        // 지도 인스턴스 생성\n        const map = new window.naver.maps.Map(mapRef.current, mapOptions);\n        mapInstanceRef.current = map;\n        console.log('네이버 지도가 성공적으로 초기화되었습니다');\n\n        // 현재 위치 가져오기\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(position => {\n            const currentPosition = new window.naver.maps.LatLng(position.coords.latitude, position.coords.longitude);\n            map.setCenter(currentPosition);\n\n            // 현재 위치에 마커 표시\n            new window.naver.maps.Marker({\n              position: currentPosition,\n              map: map,\n              icon: {\n                content: '<div class=\"map-current-location\"></div>',\n                anchor: new window.naver.maps.Point(15, 15)\n              },\n              title: '현재 위치'\n            });\n          }, error => {\n            console.error('현재 위치를 가져오는데 실패했습니다:', error);\n          });\n        }\n\n        // 지도 클릭 이벤트 추가\n        window.naver.maps.Event.addListener(map, 'click', function (e) {\n          // 클릭한 위치\n          const clickedPosition = e.coord;\n\n          // 기존 마커 제거\n          if (markerRef.current) {\n            markerRef.current.setMap(null);\n          }\n\n          // 새 마커 생성\n          const marker = new window.naver.maps.Marker({\n            position: clickedPosition,\n            map: map\n          });\n          markerRef.current = marker;\n\n          // 주소 정보 가져오기 (Reverse Geocoding)\n          window.naver.maps.Service.reverseGeocode({\n            coords: clickedPosition,\n            orders: [window.naver.maps.Service.OrderType.ADDR, window.naver.maps.Service.OrderType.ROAD_ADDR].join(',')\n          }, function (status, response) {\n            if (status !== window.naver.maps.Service.Status.OK) {\n              return alert('주소를 가져오는데 실패했습니다!');\n            }\n\n            // 주소 정보 추출\n            const result = response.v2;\n            const address = result.address.roadAddress || result.address.jibunAddress;\n\n            // 정보창 표시\n            const infoWindow = new window.naver.maps.InfoWindow({\n              content: `<div class=\"info-window\">\n                        <p>${address}</p>\n                        <p>위도: ${clickedPosition.lat().toFixed(6)}, 경도: ${clickedPosition.lng().toFixed(6)}</p>\n                      </div>`,\n              maxWidth: 300,\n              backgroundColor: \"#fff\",\n              borderColor: \"#ccc\",\n              borderWidth: 2,\n              anchorSize: new window.naver.maps.Size(10, 10),\n              anchorColor: \"#fff\",\n              pixelOffset: new window.naver.maps.Point(10, -10)\n            });\n            infoWindow.open(map, marker);\n\n            // 마커 정보 상태 업데이트\n            setMarkerInfo({\n              lat: clickedPosition.lat(),\n              lng: clickedPosition.lng(),\n              address: address\n            });\n\n            // 입력 폼 표시\n            setShowInput(true);\n          });\n        });\n      } catch (error) {\n        console.error('지도 초기화 중 오류 발생:', error);\n      }\n    };\n\n    // 지도 초기화 함수 호출\n    initializeMap();\n\n    // 컴포넌트 언마운트 시 정리\n    return () => {\n      if (markerRef.current && markerRef.current.setMap) {\n        markerRef.current.setMap(null);\n      }\n      mapInstanceRef.current = null;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapRef,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), showInput && markerInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marker-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC120\\uD0DD\\uD55C \\uC704\\uCE58 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC8FC\\uC18C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 14\n        }, this), \" \", markerInfo.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC704\\uB3C4:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 14\n        }, this), \" \", markerInfo.lat.toFixed(6), \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uACBD\\uB3C4:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 64\n        }, this), \" \", markerInfo.lng.toFixed(6)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"placeName\",\n          children: \"\\uC7A5\\uC18C \\uC774\\uB984:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"placeName\",\n          value: placeName,\n          onChange: e => setPlaceName(e.target.value),\n          placeholder: \"\\uC7A5\\uC18C \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveMarkerToLocalStorage,\n        className: \"save-button\",\n        children: \"\\uC774 \\uC704\\uCE58 \\uC800\\uC7A5\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"guide-text\",\n        children: \"\\uC704\\uCE58\\uB97C \\uC800\\uC7A5\\uD558\\uB824\\uBA74 \\uC9C0\\uB3C4\\uC5D0\\uC11C \\uC6D0\\uD558\\uB294 \\uC704\\uCE58\\uB97C \\uD074\\uB9AD\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"guide-text\",\n        children: [\"\\uC800\\uC7A5\\uD55C \\uC704\\uCE58\\uB294 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 43\n        }, this), \" \\uBA54\\uB274\\uC5D0\\uC11C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"NVMYdh2X/XYsjIF4Qe3swapudm8=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Map","_s","mapRef","mapInstanceRef","markerRef","markerInfo","setMarkerInfo","showInput","setShowInput","placeName","setPlaceName","saveMarkerToLocalStorage","name","trim","Date","toLocaleTimeString","markerObj","address","lat","lng","markers","JSON","parse","localStorage","getItem","push","setItem","stringify","alert","initializeMap","window","naver","maps","console","error","current","latlng","LatLng","mapOptions","center","zoom","zoomControl","zoomControlOptions","position","Position","TOP_RIGHT","map","log","navigator","geolocation","getCurrentPosition","currentPosition","coords","latitude","longitude","setCenter","Marker","icon","content","anchor","Point","title","Event","addListener","e","clickedPosition","coord","setMap","marker","Service","reverseGeocode","orders","OrderType","ADDR","ROAD_ADDR","join","status","response","Status","OK","result","v2","roadAddress","jibunAddress","infoWindow","InfoWindow","toFixed","maxWidth","backgroundColor","borderColor","borderWidth","anchorSize","Size","anchorColor","pixelOffset","open","className","children","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/luca/workspace/HtmlCssJs_Project/plan_web/src/pages/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './Map.css';\n\nfunction Map() {\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  const [markerInfo, setMarkerInfo] = useState(null);\n  const [showInput, setShowInput] = useState(false);\n  const [placeName, setPlaceName] = useState('');\n\n\n\n  // 장소를 localStorage에 저장\n  const saveMarkerToLocalStorage = () => {\n    if (!markerInfo) return;\n    \n    // name이 없으면 기본값 설정\n    const name = placeName.trim() || `위치 ${new Date().toLocaleTimeString()}`;\n    \n    const markerObj = {\n      name: name,\n      address: markerInfo.address,\n      lat: markerInfo.lat,\n      lng: markerInfo.lng\n    };\n\n    // localStorage에 기존 데이터 불러오기\n    let markers = JSON.parse(localStorage.getItem(\"markers\")) || [];\n    markers.push(markerObj);\n\n    // localStorage에 저장\n    localStorage.setItem(\"markers\", JSON.stringify(markers));\n\n    // 저장 완료 알림 및 상태 초기화\n    alert('위치가 저장되었습니다! Saved 메뉴에서 확인하세요.');\n    setPlaceName('');\n    setShowInput(false);\n  };\n\n  useEffect(() => {\n    // 네이버 지도 초기화 함수\n    const initializeMap = () => {\n      // 스크립트가 이미 index.html에 포함되어 있어야 합니다\n      if (!window.naver || !window.naver.maps) {\n        console.error('네이버 맵 API가 로드되지 않았습니다. index.html에 스크립트가 포함되어 있는지 확인하세요.');\n        return;\n      }\n      \n      if (!mapRef.current) {\n        console.error('지도 컨테이너 요소를 찾을 수 없습니다');\n        return;\n      }\n      \n      try {\n        // 초기 위치 (서울시청)\n        const latlng = new window.naver.maps.LatLng(37.5665, 126.9780);\n        \n        // 지도 옵션 설정\n        const mapOptions = {\n          center: latlng,\n          zoom: 15,\n          zoomControl: true,\n          zoomControlOptions: {\n            position: window.naver.maps.Position.TOP_RIGHT\n          }\n        };\n        \n        // 지도 인스턴스 생성\n        const map = new window.naver.maps.Map(mapRef.current, mapOptions);\n        mapInstanceRef.current = map;\n        \n        console.log('네이버 지도가 성공적으로 초기화되었습니다');\n        \n        // 현재 위치 가져오기\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(\n            (position) => {\n              const currentPosition = new window.naver.maps.LatLng(\n                position.coords.latitude,\n                position.coords.longitude\n              );\n              map.setCenter(currentPosition);\n              \n              // 현재 위치에 마커 표시\n              new window.naver.maps.Marker({\n                position: currentPosition,\n                map: map,\n                icon: {\n                  content: '<div class=\"map-current-location\"></div>',\n                  anchor: new window.naver.maps.Point(15, 15)\n                },\n                title: '현재 위치'\n              });\n            },\n            (error) => {\n              console.error('현재 위치를 가져오는데 실패했습니다:', error);\n            }\n          );\n        }\n        \n        // 지도 클릭 이벤트 추가\n        window.naver.maps.Event.addListener(map, 'click', function(e) {\n          // 클릭한 위치\n          const clickedPosition = e.coord;\n          \n          // 기존 마커 제거\n          if (markerRef.current) {\n            markerRef.current.setMap(null);\n          }\n          \n          // 새 마커 생성\n          const marker = new window.naver.maps.Marker({\n            position: clickedPosition,\n            map: map\n          });\n          markerRef.current = marker;\n          \n          // 주소 정보 가져오기 (Reverse Geocoding)\n          window.naver.maps.Service.reverseGeocode({\n            coords: clickedPosition,\n            orders: [\n              window.naver.maps.Service.OrderType.ADDR,\n              window.naver.maps.Service.OrderType.ROAD_ADDR\n            ].join(',')\n          }, function(status, response) {\n            if (status !== window.naver.maps.Service.Status.OK) {\n              return alert('주소를 가져오는데 실패했습니다!');\n            }\n            \n            // 주소 정보 추출\n            const result = response.v2;\n            const address = result.address.roadAddress || result.address.jibunAddress;\n            \n            // 정보창 표시\n            const infoWindow = new window.naver.maps.InfoWindow({\n              content: `<div class=\"info-window\">\n                        <p>${address}</p>\n                        <p>위도: ${clickedPosition.lat().toFixed(6)}, 경도: ${clickedPosition.lng().toFixed(6)}</p>\n                      </div>`,\n              maxWidth: 300,\n              backgroundColor: \"#fff\",\n              borderColor: \"#ccc\",\n              borderWidth: 2,\n              anchorSize: new window.naver.maps.Size(10, 10),\n              anchorColor: \"#fff\",\n              pixelOffset: new window.naver.maps.Point(10, -10)\n            });\n            \n            infoWindow.open(map, marker);\n            \n            // 마커 정보 상태 업데이트\n            setMarkerInfo({\n              lat: clickedPosition.lat(),\n              lng: clickedPosition.lng(),\n              address: address\n            });\n            \n            // 입력 폼 표시\n            setShowInput(true);\n          });\n        });\n      } catch (error) {\n        console.error('지도 초기화 중 오류 발생:', error);\n      }\n    };\n    \n    // 지도 초기화 함수 호출\n    initializeMap();\n    \n\n    \n    // 컴포넌트 언마운트 시 정리\n    return () => {\n      if (markerRef.current && markerRef.current.setMap) {\n        markerRef.current.setMap(null);\n      }\n      mapInstanceRef.current = null;\n    };\n  }, []);\n\n  return (\n    <div className=\"map-page\">\n      <div className=\"map-container\">\n        <div ref={mapRef} style={{ width: '100%', height: '100%' }}></div>\n      </div>\n      \n      {showInput && markerInfo && (\n        <div className=\"marker-info\">\n          <h3>선택한 위치 정보</h3>\n          <p><strong>주소:</strong> {markerInfo.address}</p>\n          <p><strong>위도:</strong> {markerInfo.lat.toFixed(6)}, <strong>경도:</strong> {markerInfo.lng.toFixed(6)}</p>\n          <div className=\"input-group\">\n            <label htmlFor=\"placeName\">장소 이름:</label>\n            <input \n              type=\"text\" \n              id=\"placeName\" \n              value={placeName} \n              onChange={(e) => setPlaceName(e.target.value)} \n              placeholder=\"장소 이름을 입력하세요\"\n            />\n          </div>\n          <button onClick={saveMarkerToLocalStorage} className=\"save-button\">이 위치 저장하기</button>\n        </div>\n      )}\n      \n      <div className=\"map-guide\">\n        <p className=\"guide-text\">위치를 저장하려면 지도에서 원하는 위치를 클릭하세요.</p>\n        <p className=\"guide-text\">저장한 위치는 <strong>Saved</strong> 메뉴에서 확인할 수 있습니다.</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}