{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\username\\\\Desktop\\\\newweb\\\\src\\\\pages\\\\Plan.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Plan.css';\nimport PlanModal from '../components/Modal.js';\nimport img1 from '../assets/1.PNG';\nimport img2 from '../assets/2.PNG';\nimport img3 from '../assets/3.PNG';\nimport img4 from '../assets/4.PNG';\nimport img5 from '../assets/5.PNG';\nimport img6 from '../assets/6.PNG';\nimport img7 from '../assets/7.PNG';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabList = ['Plan', 'Place'];\nexport default function Plan() {\n  _s();\n  // 현재 선택된 탭 상태 (Plan / Favorite / Saved)\n  const [activeTab, setActiveTab] = useState('Plan');\n  const [search, setSearch] = useState('');\n  const [savedLocations, setSavedLocations] = useState([]);\n  const [savedPlans, setSavedPlans] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [planName, setPlanName] = useState('');\n  const [planDescription, setPlanDescription] = useState('');\n  const [planAddress, setPlanAddress] = useState('');\n  const [planUploadedImage, setPlanUploadedImage] = useState(null); // 업로드된 이미지\n  const [planImagePreview, setPlanImagePreview] = useState(''); // 이미지 미리보기 URL\n\n  const handleAddPlan = () => {\n    const newPlan = {\n      id: Date.now(),\n      title: planName === '' ? '빈 이름' : planName,\n      description: planDescription === '' ? '빈 설명' : planDescription,\n      address: planAddress === '' ? '빈 주소' : planAddress,\n      image: planUploadedImage === null ? null : planUploadedImage\n    };\n    setSavedPlans(prev => [...prev, newPlan]);\n    setPlanName('');\n    setPlanDescription('');\n    setPlanAddress('');\n    setPlanUploadedImage(null);\n    setPlanImagePreview('');\n    setIsModalOpen(false);\n  };\n  const handleDeletePlan = index => {\n    const updatedPlans = [...savedPlans];\n    updatedPlans.splice(index, 1);\n    setSavedPlans(updatedPlans);\n    //localStorage.setItem('markers', JSON.stringify(updatedPlans));\n  };\n\n  // localStorage에서 저장된 위치 정보를 로드하는 함수\n  useEffect(() => {\n    const loadSavedLocations = () => {\n      try {\n        const markers = JSON.parse(localStorage.getItem('markers')) || [];\n        // 데이터 형식 확인 및 보완\n        const processedMarkers = markers.map(marker => ({\n          ...marker,\n          // 기본 이미지 없는 경우 처리 (내장된 이미지 사용)\n          img: marker.img || (marker.id % 6 === 0 ? img6 : marker.id % 5 === 0 ? img5 : marker.id % 4 === 0 ? img4 : marker.id % 3 === 0 ? img3 : marker.id % 2 === 0 ? img2 : img1),\n          // id가 없는 경우 새로 생성\n          id: marker.id || new Date().getTime() + Math.floor(Math.random() * 1000),\n          // titleKor이 없으면 name으로 설정\n          titleKor: marker.titleKor || marker.name,\n          // titleEng가 없으면 name으로 설정\n          titleEng: marker.titleEng || marker.name,\n          // location이 없는 경우 주소에서 추출 시도\n          location: marker.location || extractLocation(marker.address) || 'Unknown',\n          // 기본 유형 설정\n          type: marker.type || 'Landmark',\n          // 기본 체류시간 설정\n          stay: marker.stay || '1h',\n          // 기본적으로 인기 아님\n          popular: marker.popular || false,\n          // 기본적으로 favorite 아님\n          favorite: marker.favorite || false\n        }));\n        setSavedLocations(processedMarkers);\n      } catch (error) {\n        console.error('저장된 위치 정보를 불러오는 중 오류가 발생했습니다:', error);\n        setSavedLocations([]);\n      }\n    };\n    loadSavedLocations();\n  }, []);\n\n  // 주소에서 지역명 추출 함수\n  const extractLocation = address => {\n    if (!address) return '';\n\n    // 시/도 추출 (서울특별시, 경기도 등)\n    const cityMatch = address.match(/([^\\s]+시|[^\\s]+도|[^\\s]+군)/);\n    if (cityMatch) {\n      // \"특별시\", \"광역시\" 등의 접미사 제거\n      return cityMatch[0].replace(/특별시|광역시|자치시/, '').trim();\n    }\n    return '';\n  };\n  const allData = [\n  //...plan_cardData,\n  ...savedLocations];\n  const lowerSearch = search.trim().toLowerCase();\n  const filtered = allData.filter(item => {\n    var _item$titleEng, _item$titleKor, _item$name;\n    const matchSearch = ((_item$titleEng = item.titleEng) === null || _item$titleEng === void 0 ? void 0 : _item$titleEng.toLowerCase().includes(lowerSearch)) || ((_item$titleKor = item.titleKor) === null || _item$titleKor === void 0 ? void 0 : _item$titleKor.toLowerCase().includes(lowerSearch)) || ((_item$name = item.name) === null || _item$name === void 0 ? void 0 : _item$name.toLowerCase().includes(lowerSearch));\n    return lowerSearch === '' || matchSearch;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plan-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"plan-page__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"plan-page__title\",\n        children: \"\\u201CPlan your journey, live the adventure\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"plan-page__subtitle\",\n        children: \"\\u201CHit the road. Make new memories.\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-page__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-page__tabs\",\n        children: tabList.map(tabName => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === tabName ? 'tab--active' : ''}`,\n          onClick: () => setActiveTab(tabName),\n          children: tabName\n        }, tabName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search...\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-page__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-page__list\",\n        children: [activeTab === 'Plan' && savedPlans.map((loc, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan_card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: loc.image,\n            alt: loc.title,\n            className: \"plan_card__image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan_card__body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__title\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: loc.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"plan_card__desc\",\n              children: loc.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), loc.address && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__address\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: loc.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"plan_card__delete\",\n            title: \"\\uC0AD\\uC81C\\uD558\\uAE30\",\n            onClick: () => handleDeletePlan(index),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, loc.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)), activeTab === 'Plan' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plan_card__add-button\",\n          onClick: () => setIsModalOpen(true),\n          children: \"+ \\uD50C\\uB79C \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), activeTab === 'Place' && filtered.map(place => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan_card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: place.img,\n            alt: place.name,\n            className: \"plan_card__image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan_card__body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__title\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: place.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"plan_card__desc\",\n              children: place.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), place.address && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan_card__address\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: place.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `plan_card__favorite${place.favorite ? ' --active' : ''}`,\n            children: place.favorite ? '♥' : '♡'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, place.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-page__map\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-placeholder\",\n          children: \"\\uC9C0\\uB3C4 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uAC00 \\uC5EC\\uAE30\\uC5D0 \\uB4E4\\uC5B4\\uAC11\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlanModal, {\n      visible: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onCreate: handleAddPlan,\n      planName: planName,\n      setPlanName: setPlanName,\n      description: planDescription,\n      setDescription: setPlanDescription,\n      address: planAddress,\n      setAddress: setPlanAddress,\n      uploadedImage: planUploadedImage,\n      setUploadedImage: setPlanUploadedImage,\n      imagePreview: planImagePreview,\n      setImagePreview: setPlanImagePreview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(Plan, \"anYL2O1Ev4m+6W8ymdzDXXJovH0=\");\n_c = Plan;\nvar _c;\n$RefreshReg$(_c, \"Plan\");","map":{"version":3,"names":["React","useState","useEffect","PlanModal","img1","img2","img3","img4","img5","img6","img7","jsxDEV","_jsxDEV","tabList","Plan","_s","activeTab","setActiveTab","search","setSearch","savedLocations","setSavedLocations","savedPlans","setSavedPlans","isModalOpen","setIsModalOpen","planName","setPlanName","planDescription","setPlanDescription","planAddress","setPlanAddress","planUploadedImage","setPlanUploadedImage","planImagePreview","setPlanImagePreview","handleAddPlan","newPlan","id","Date","now","title","description","address","image","prev","handleDeletePlan","index","updatedPlans","splice","loadSavedLocations","markers","JSON","parse","localStorage","getItem","processedMarkers","map","marker","img","getTime","Math","floor","random","titleKor","name","titleEng","location","extractLocation","type","stay","popular","favorite","error","console","cityMatch","match","replace","trim","allData","lowerSearch","toLowerCase","filtered","filter","item","_item$titleEng","_item$titleKor","_item$name","matchSearch","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tabName","onClick","placeholder","value","onChange","e","target","loc","src","alt","place","visible","onClose","onCreate","setDescription","setAddress","uploadedImage","setUploadedImage","imagePreview","setImagePreview","_c","$RefreshReg$"],"sources":["C:/Users/username/Desktop/newweb/src/pages/Plan.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Plan.css';\nimport PlanModal from '../components/Modal.js';\n\nimport img1 from '../assets/1.PNG';\nimport img2 from '../assets/2.PNG';\nimport img3 from '../assets/3.PNG';\nimport img4 from '../assets/4.PNG';\nimport img5 from '../assets/5.PNG';\nimport img6 from '../assets/6.PNG';\nimport img7 from '../assets/7.PNG';\n\nconst tabList = ['Plan', 'Place'];\n\n\nexport default function Plan() {\n  // 현재 선택된 탭 상태 (Plan / Favorite / Saved)\n  const [activeTab, setActiveTab] = useState('Plan');\n  const [search, setSearch] = useState('');\n  const [savedLocations, setSavedLocations] = useState([]);\n  const [savedPlans, setSavedPlans] = useState([]);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [planName, setPlanName] = useState('');\n  const [planDescription, setPlanDescription] = useState('');\n  const [planAddress, setPlanAddress] = useState('');\n  const [planUploadedImage, setPlanUploadedImage] = useState(null); // 업로드된 이미지\n  const [planImagePreview, setPlanImagePreview] = useState(''); // 이미지 미리보기 URL\n\n\n  const handleAddPlan = () => {\n    const newPlan = {\n      id: Date.now(),\n      title: planName === '' ? '빈 이름' : planName,\n      description: planDescription === '' ? '빈 설명' : planDescription,\n      address: planAddress === '' ? '빈 주소' : planAddress,\n      image: planUploadedImage === null ? null : planUploadedImage,\n    };\n    setSavedPlans(prev => [...prev, newPlan]);\n\n    setPlanName('');\n    setPlanDescription('');\n    setPlanAddress('');\n    setPlanUploadedImage(null);\n    setPlanImagePreview('');\n    setIsModalOpen(false);\n  };\n\n  const handleDeletePlan = (index) => {\n    const updatedPlans = [...savedPlans];\n    updatedPlans.splice(index, 1);\n    setSavedPlans(updatedPlans);\n    //localStorage.setItem('markers', JSON.stringify(updatedPlans));\n  };\n\n  // localStorage에서 저장된 위치 정보를 로드하는 함수\n  useEffect(() => {\n    const loadSavedLocations = () => {\n      try {\n        const markers = JSON.parse(localStorage.getItem('markers')) || [];\n        // 데이터 형식 확인 및 보완\n        const processedMarkers = markers.map(marker => ({\n          ...marker,\n          // 기본 이미지 없는 경우 처리 (내장된 이미지 사용)\n          img: marker.img || (marker.id % 6 === 0 ? img6 : \n                marker.id % 5 === 0 ? img5 :\n                marker.id % 4 === 0 ? img4 :\n                marker.id % 3 === 0 ? img3 :\n                marker.id % 2 === 0 ? img2 : img1),\n          // id가 없는 경우 새로 생성\n          id: marker.id || new Date().getTime() + Math.floor(Math.random() * 1000),\n          // titleKor이 없으면 name으로 설정\n          titleKor: marker.titleKor || marker.name,\n          // titleEng가 없으면 name으로 설정\n          titleEng: marker.titleEng || marker.name,\n          // location이 없는 경우 주소에서 추출 시도\n          location: marker.location || extractLocation(marker.address) || 'Unknown',\n          // 기본 유형 설정\n          type: marker.type || 'Landmark',\n          // 기본 체류시간 설정\n          stay: marker.stay || '1h',\n          // 기본적으로 인기 아님\n          popular: marker.popular || false,\n          // 기본적으로 favorite 아님\n          favorite: marker.favorite || false\n        }));\n        setSavedLocations(processedMarkers);\n      } catch (error) {\n        console.error('저장된 위치 정보를 불러오는 중 오류가 발생했습니다:', error);\n        setSavedLocations([]);\n      }\n    };\n    \n    loadSavedLocations();\n  }, []);\n\n  // 주소에서 지역명 추출 함수\n  const extractLocation = (address) => {\n    if (!address) return '';\n    \n    // 시/도 추출 (서울특별시, 경기도 등)\n    const cityMatch = address.match(/([^\\s]+시|[^\\s]+도|[^\\s]+군)/);\n    if (cityMatch) {\n      // \"특별시\", \"광역시\" 등의 접미사 제거\n      return cityMatch[0].replace(/특별시|광역시|자치시/, '').trim();\n    }\n    return '';\n  };\n\n  const allData = [\n    //...plan_cardData,\n    ...savedLocations\n  ];\n  const lowerSearch = search.trim().toLowerCase();\n  const filtered = allData.filter(item => {\n    const matchSearch =\n      item.titleEng?.toLowerCase().includes(lowerSearch) ||\n      item.titleKor?.toLowerCase().includes(lowerSearch) ||\n      item.name?.toLowerCase().includes(lowerSearch);\n    return lowerSearch === '' || matchSearch;\n  });\n\n\n\n  return (\n    <div className=\"plan-page\">\n      {/* 1. 상단 타이틀 영역 */}\n      <section className=\"plan-page__header\">\n        <h1 className=\"plan-page__title\">“Plan your journey, live the adventure”</h1>\n        <p className=\"plan-page__subtitle\">“Hit the road. Make new memories.”</p>\n      </section>\n\n      {/* 2. 탭 및 필터 아이콘 영역 */}\n      <div className=\"plan-page__controls\">\n        <div className=\"plan-page__tabs\">\n          {tabList.map((tabName) => (\n            <button\n              key={tabName}\n              className={`tab ${activeTab === tabName ? 'tab--active' : ''}`}\n              onClick={() => setActiveTab(tabName)}\n            >\n              {tabName}\n            </button>\n          ))}\n        </div>\n        <div className=\"search\">\n          <input\n            type=\"text\"\n            placeholder=\"Search...\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {/* 3. 메인 콘텐츠: 좌측 카드 리스트 + 우측 지도 영역 */}\n      <div className=\"plan-page__content\">\n        {/* 좌측 카드 리스트 */}\n        <div className=\"plan-page__list\">\n          {/* Plan 탭 */}\n          {activeTab === 'Plan' && savedPlans.map((loc, index) => (\n            <div key={loc.id} className=\"plan_card\">\n              <img\n                src={loc.image}\n                alt={loc.title}\n                className=\"plan_card__image\"\n              />\n              <div className=\"plan_card__body\">\n                <div className=\"plan_card__title\">\n                  <span>{loc.title}</span>\n                </div>\n                <p className=\"plan_card__desc\">{loc.description}</p>\n                {loc.address && (\n                  <div className=\"plan_card__address\">\n\n                    <span>{loc.address}</span>\n                  </div>\n                )}\n              </div>\n              {/* favorite */}\n              <button className=\"plan_card__delete\" title=\"삭제하기\" onClick={() => handleDeletePlan(index)}>×</button>\n            </div>\n          ))}\n          {activeTab === 'Plan' && \n            <button\n              className=\"plan_card__add-button\"\n              onClick={() => setIsModalOpen(true)}\n            >\n              + 플랜 추가\n            </button>\n          }\n          {/* Place 탭 */}\n          {activeTab === 'Place' && filtered.map((place) => (\n            <div key={place.id} className=\"plan_card\">\n              <img\n                src={place.img}\n                alt={place.name}\n                className=\"plan_card__image\"\n              />\n              <div className=\"plan_card__body\">\n                <div className=\"plan_card__title\">\n                  <span>{place.name}</span>\n                </div>\n                <p className=\"plan_card__desc\">{place.description}</p>\n                {place.address && (\n                  <div className=\"plan_card__address\">\n                    <span>{place.address}</span>\n                  </div>\n                )}\n              </div>\n              <span className={`plan_card__favorite${place.favorite ? ' --active' : ''}`} >{place.favorite ? '♥' : '♡'}</span>\n            </div>\n          ))}\n        </div>\n\n        {/* 우측 지도 영역 */}\n        <div className=\"plan-page__map\">\n          <div className=\"map-placeholder\">\n            지도 컴포넌트가 여기에 들어갑니다.\n          </div>\n        </div>\n      </div>\n      <PlanModal\n        visible={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        onCreate={handleAddPlan}\n        planName={planName}\n        setPlanName={setPlanName}\n        description={planDescription}\n        setDescription={setPlanDescription}\n        address={planAddress}\n        setAddress={setPlanAddress}\n        uploadedImage={planUploadedImage}\n        setUploadedImage={setPlanUploadedImage}\n        imagePreview={planImagePreview}\n        setImagePreview={setPlanImagePreview}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}